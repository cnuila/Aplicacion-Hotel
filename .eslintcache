[{"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\App.js":"3","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\ListarUsuario.js":"4","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\admin_menu.js":"5","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Habitaciones.js":"6","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\LandingPage.js":"7","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\RestaurantePrincipal.js":"8","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\MisReservas.js":"9","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Servicios.js":"10","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\InformacionHabitacion.js":"11","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\MenuRestaurante.js":"12","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\LogIn\\LogIn.js":"13","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\LogIn\\RecuperarContra.js":"14","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Rutas Privadas\\RutaPrivada.js":"15","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\LogIn\\SignIn.js":"16","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Rutas Privadas\\Auth.js":"17","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Navbar.js":"18","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\firebase.js":"19","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Habitacion.js":"20","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Platillo.js":"21","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\PaypalButton.js":"22","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Reseña.js":"23","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\CrearReseña.js":"24","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaHabitaciones.js":"25","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaClientes.js":"26","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaServicios.js":"27","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaMenu.js":"28","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaReservas.js":"29","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Dropdown.js":"30","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ReseñasVisibles.js":"31","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\AgregarServicios.js":"32","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ModificarHabitacion.js":"33","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ModificarServicios.js":"34","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\AgregarHabitaciones.js":"35","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ModificarMenu.js":"36","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\AgregarMenu.js":"37","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\Loading.js":"38","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\AgregarItems\\Items.js":"39","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\AgregarItems\\Form.js":"40"},{"size":560,"mtime":1616635861390,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1616635861390,"results":"43","hashOfConfig":"42"},{"size":1740,"mtime":1616635861190,"results":"44","hashOfConfig":"42"},{"size":9517,"mtime":1616635861243,"results":"45","hashOfConfig":"42"},{"size":3354,"mtime":1616635861259,"results":"46","hashOfConfig":"42"},{"size":1903,"mtime":1616635861227,"results":"47","hashOfConfig":"42"},{"size":10168,"mtime":1616635861243,"results":"48","hashOfConfig":"42"},{"size":6786,"mtime":1616635861243,"results":"49","hashOfConfig":"42"},{"size":9603,"mtime":1616635861243,"results":"50","hashOfConfig":"42"},{"size":3099,"mtime":1616635861259,"results":"51","hashOfConfig":"42"},{"size":12208,"mtime":1616801863862,"results":"52","hashOfConfig":"42"},{"size":931,"mtime":1616635861243,"results":"53","hashOfConfig":"42"},{"size":7740,"mtime":1616635861243,"results":"54","hashOfConfig":"42"},{"size":2790,"mtime":1616635861243,"results":"55","hashOfConfig":"42"},{"size":614,"mtime":1616635861259,"results":"56","hashOfConfig":"42"},{"size":10864,"mtime":1616801319334,"results":"57","hashOfConfig":"42"},{"size":610,"mtime":1616635861259,"results":"58","hashOfConfig":"42"},{"size":2119,"mtime":1616635861243,"results":"59","hashOfConfig":"42"},{"size":676,"mtime":1616635861290,"results":"60","hashOfConfig":"42"},{"size":3795,"mtime":1616635861227,"results":"61","hashOfConfig":"42"},{"size":2287,"mtime":1616635861243,"results":"62","hashOfConfig":"42"},{"size":2779,"mtime":1616635861243,"results":"63","hashOfConfig":"42"},{"size":4254,"mtime":1616800869564,"results":"64","hashOfConfig":"42"},{"size":5441,"mtime":1616801435646,"results":"65","hashOfConfig":"42"},{"size":21986,"mtime":1616635861205,"results":"66","hashOfConfig":"42"},{"size":6094,"mtime":1616635861205,"results":"67","hashOfConfig":"42"},{"size":11258,"mtime":1616635861221,"results":"68","hashOfConfig":"42"},{"size":9472,"mtime":1616635861221,"results":"69","hashOfConfig":"42"},{"size":7404,"mtime":1616635861221,"results":"70","hashOfConfig":"42"},{"size":4969,"mtime":1616635861227,"results":"71","hashOfConfig":"42"},{"size":4033,"mtime":1616635861227,"results":"72","hashOfConfig":"42"},{"size":11458,"mtime":1616635861205,"results":"73","hashOfConfig":"42"},{"size":16332,"mtime":1616635861221,"results":"74","hashOfConfig":"42"},{"size":15706,"mtime":1616635861227,"results":"75","hashOfConfig":"42"},{"size":12255,"mtime":1616635861205,"results":"76","hashOfConfig":"42"},{"size":15088,"mtime":1616635861221,"results":"77","hashOfConfig":"42"},{"size":10915,"mtime":1616635861205,"results":"78","hashOfConfig":"42"},{"size":1116,"mtime":1616635861221,"results":"79","hashOfConfig":"42"},{"size":1282,"mtime":1616635861227,"results":"80","hashOfConfig":"42"},{"size":1755,"mtime":1616635861227,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"f6surw",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"84"},"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\index.js",[],["178","179"],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\App.js",["180","181"],"import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport LogIn from './Components/LogIn/LogIn'\r\nimport SignIn from './Components/LogIn/SignIn'\r\nimport Administracion from './Components/admin_menu'\r\nimport LandingPage from \"./Components/LandingPage\"\r\nimport ListarUsuario from \"./Components/ListarUsuario\"\r\nimport RecuperarContraseña from './Components/LogIn/RecuperarContra'\r\nimport Servicos from './Components/Servicios'\r\nimport Habitaciones from './Components/Habitaciones'\r\nimport Restaurante from './Components/RestaurantePrincipal'\r\nimport MisReservas from './Components/MisReservas'\r\nimport { AuthProvider } from './Components/Rutas Privadas/Auth';\r\nimport PrivateRoute from \"./Components/Rutas Privadas/RutaPrivada\"\r\nimport InfoHabitacion from \"./Components/InformacionHabitacion\"\r\nimport Menu from \"./Components/MenuRestaurante\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={LandingPage} />\r\n        <Route path=\"/signup\" component={SignIn} />\r\n        <Route path=\"/login\" component={LogIn} />\r\n        <Route path=\"/administracion\" component={Administracion} />\r\n        <Route path=\"/recuperarContra\" component={RecuperarContraseña} />\r\n        <Route path=\"/servicios\" component={Servicos} />\r\n        <Route path=\"/miInfo\" exact component={ListarUsuario} />\r\n        <Route path=\"/habitaciones\" exact component={Habitaciones} />\r\n        <Route path=\"/restaurante\" component={Restaurante} />\r\n        <Route path=\"/habitaciones/:nombre\" component={InfoHabitacion} />\r\n        <Route path=\"/menu\" component={Menu} />\r\n        <Route path=\"/misReservas\" component={MisReservas}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\ListarUsuario.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\admin_menu.js",["182"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport ListaClientes from './Administración/ListaClientes'\r\nimport ListaHabitaciones from './Administración/ListaHabitaciones'\r\nimport ListaServicios from './Administración/ListaServicios'\r\nimport ListaMenu from './Administración/ListaMenu'\r\nimport ListaReservas from './Administración/ListaReservas'\r\nimport Navbar from './Navbar'\r\n\r\nconst AdminMenu = function () {\r\n  const [isClosed, setClosed] = React.useState(false)\r\n\r\n  const isStatic = useMediaQuery({\r\n    query: '(min-width: 640px)',\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Router>\r\n        <div className=\"flex bg-gray-100\">\r\n          {(isStatic || !isClosed) && (\r\n            <aside\r\n              aria-hidden={isClosed}\r\n              className=\"bg-white w-64 min-h-screen flex flex-col\"\r\n            >\r\n\r\n              <div className=\"bg-gray-300 border-r py-3 pl-1 flex-grow relative text-black font-semibold\">\r\n                <nav>\r\n                  <ul>\r\n                    <li className=\"p-3 hover:bg-gray-400\" >\r\n                      <Link to=\"/administracion/Clientes\" className=\"btn btn-primary\">Clientes</Link>\r\n                    </li>\r\n                    <li className=\"p-3 hover:bg-gray-400\">\r\n                      <Link to=\"/administracion/Habitaciones\" className=\"btn btn-primary\">Habitaciones</Link>\r\n                    </li>\r\n                    <li className=\"p-3 hover:bg-gray-400\">\r\n                      <Link to=\"/administracion/Reservas\" className=\"btn btn-primary\">Reservas</Link>\r\n                    </li>\r\n                    <li className=\"p-3 hover:bg-gray-400\">\r\n                      <Link to=\"/administracion/Restaurante\" className=\"btn btn-primary\">Menus</Link>\r\n                    </li>\r\n                    <li className=\"p-3 hover:bg-gray-400\">\r\n                      <Link to=\"/administracion/Servicios\" className=\"btn btn-primary\">Servicios</Link>\r\n                    </li>                    \r\n                  </ul>\r\n                </nav>\r\n\r\n              </div>\r\n            </aside>\r\n          )}\r\n\r\n          <main className=\"flex-grow flex flex-col min-h-screen\">\r\n\r\n            <Switch>\r\n              <Route path=\"/administracion/Clientes\">\r\n                <Clientes />\r\n              </Route>\r\n              <Route path=\"/administracion/Habitaciones\">\r\n                <Habitaciones />\r\n              </Route>\r\n              <Route path=\"/administracion/Reservas\">\r\n                <Reservas />\r\n              </Route>\r\n              <Route path=\"/administracion/Restaurante\">\r\n                <Restaurante />\r\n              </Route>\r\n              <Route path=\"/administracion/Servicios\">\r\n                <Servicios />\r\n              </Route>              \r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Clientes() {\r\n  return (\r\n    <ListaClientes />\r\n  )\r\n}\r\n\r\nfunction Restaurante() {\r\n  return (\r\n    <ListaMenu />\r\n  )\r\n}\r\n\r\nfunction Servicios() {\r\n  return (\r\n    <ListaServicios />\r\n  )\r\n}\r\n\r\nfunction Habitaciones() {\r\n  return (\r\n    <ListaHabitaciones />\r\n  )\r\n}\r\n\r\nfunction Reservas() {\r\n  return (\r\n    <ListaReservas />\r\n  )\r\n}\r\n\r\nexport default AdminMenu;\r\n\r\n","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Habitaciones.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\LandingPage.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\RestaurantePrincipal.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\MisReservas.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Servicios.js",["183"],"import React, { useState, useEffect } from 'react'\r\nimport Navbar from './Navbar'\r\nimport { db } from '../firebase'\r\n\r\nexport default function Servicios() {\r\n\r\n    const [servicios, setServicios] = useState([])\r\n\r\n    useEffect(() => {\r\n        getServicios()\r\n    }, [])\r\n\r\n    const getServicios = async () => {\r\n        await db.collection(\"Servicios\").orderBy(\"Nombre\").get().then(querySnapshot => {\r\n            const serviciosAgregar = []\r\n            querySnapshot.forEach(doc => {\r\n                serviciosAgregar.push({ ...doc.data(), id: doc.id })\r\n            })\r\n            setServicios(serviciosAgregar)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div class=\"bg-white text text-2xl md:text-3xl text-center mt-5 mb-3 font-bold\">Servicios</div>\r\n            {servicios.map((servicio, index) => {\r\n                const { Nombre, Precio, Detalles, Url } = servicio\r\n                let foto1 = undefined\r\n                let foto2 = undefined;\r\n                if (Url !== undefined) {\r\n                    if (Url[0] !== undefined) {\r\n                        foto1 = Url[0]\r\n                    }\r\n                    if (Url[1] !== undefined) {\r\n                        foto2 = Url[1]\r\n                    }\r\n                }\r\n\r\n                if (servicio.Visible) {\r\n                    return (\r\n                        <div key={index} class=\"bg-gray-300 mx-0 my-10 lg:mx-10 rounded-xl flex flex-col md:flex-row border-b-2 border-gray-300 py-5 lg:py-4 px-2 items-center md:items-start md:justify-center space-x-0 md:space-x-10 space-y-2 md:space-y-0\">\r\n\r\n                            {foto1 !== undefined\r\n                                ? (<img src={foto1} class=\"bg-blue-100 w-72 h-72 rounded\" alt=\"Sala de conferencia1\"></img>)\r\n                                : <></>\r\n                            }\r\n                            {foto2 !== undefined\r\n                                ? (<img src={foto2} class=\"bg-blue-100 md: w-72 h-72 rounded md:order-last\" alt=\"Sala de conferencia2\"></img>)\r\n                                : <></>\r\n                            }\r\n\r\n                            <div class=\"flex flex-col pl-5 w-80 space-y-3 justify-between\">\r\n                                <div class=\"text-2xl font-semibold text-center\">{Nombre}</div>\r\n                                {Detalles !== undefined\r\n                                    ? (<ul class=\"list-disc pl-5\">\r\n                                        {Detalles.map((detalle, index) => {\r\n                                            return (<li key={index} class=\"\">\r\n                                                {detalle.text}\r\n                                            </li>)\r\n                                        })}\r\n                                    </ul>)\r\n                                    : <></>\r\n                                }\r\n                                <div>Lps. {Precio}</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\InformacionHabitacion.js",["184"],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\MenuRestaurante.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\LogIn\\LogIn.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\LogIn\\RecuperarContra.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Rutas Privadas\\RutaPrivada.js",["185"],"import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { AuthContext } from \"./Auth\"\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    return (\r\n        <Route {...rest}\r\n            render={routeProps =>\r\n                !!currentUser ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                        <Redirect to={\"/\"} />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n};\r\n{/* Cambiar el redirect to*/}\r\nexport default PrivateRoute","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\LogIn\\SignIn.js",["186"],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Rutas Privadas\\Auth.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Navbar.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\firebase.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Habitacion.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Platillo.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\PaypalButton.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Reseña.js",["187"],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\CrearReseña.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaHabitaciones.js",["188","189","190"],"import React, { useState, useEffect } from 'react'\r\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\r\nimport { db, storage } from '../../firebase'\r\nimport { Calendar, utils } from \"react-modern-calendar-datepicker\";\r\nimport swal from 'sweetalert'\r\nimport moment from 'moment'\r\nimport AgregarHabitaciones from './AgregarHabitaciones'\r\nimport ModificarHabitacion from './ModificarHabitacion'\r\nimport ReseñasVisibles from './ReseñasVisibles'\r\n\r\n\r\nexport default function ListaHabitaciones() {\r\n\r\n    const estadoInicial = {\r\n        Nombre: \"Nombre de la Habitación\",\r\n        Precio: 0,\r\n        Complementos: [{ text: \"Complemento 1\" }, { text: \"Complemento 2\" }],\r\n        Url: undefined,\r\n        Cantidad: 0,\r\n        Visible: false\r\n    }\r\n\r\n    const [habitaciones, setHabitaciones] = useState([])\r\n    const [habitacionSeleccionada, setHabitacionSeleccionada] = useState({ ...estadoInicial, Complementos: [...estadoInicial.Complementos] })\r\n    const [diasReservados, setDiasReservados] = useState([])\r\n    const [mostrarAgregar, setMostrarAgregar] = useState(false)\r\n    const [mostrarModificar, setMostrarModificar] = useState(false)\r\n    const [mostrarModificarReseñas, setMostrarModificarReseñas] = useState(false)\r\n    const [check, setCheck] = useState()\r\n\r\n    /*función que prepara todas las habitaciones para ser mostradas en la lista del panel izquierdo\r\n        por cada habitación se hace el query para solicitar las reseñas que tiene esa habitación\r\n    */\r\n    const getHabitaciones = () => {\r\n        db.collection(\"Habitaciones\").onSnapshot((querySnapshot) => {\r\n            const listaHabitaciones = []\r\n            querySnapshot.forEach((doc) => {\r\n                const listaReseñas = []\r\n                db.collection(\"Habitaciones\").doc(doc.id).collection(\"Reseñas\").onSnapshot((querySnapshot2) => {\r\n                    querySnapshot2.forEach((doc2) => {\r\n                        listaReseñas.push({ ...doc2.data(), id: doc2.id })\r\n                    })\r\n                })\r\n                listaHabitaciones.push({ ...doc.data(), id: doc.id, reseñas: listaReseñas })\r\n            });\r\n            setHabitaciones(listaHabitaciones)\r\n        })\r\n    }\r\n    console.log(habitaciones)\r\n    useEffect(() => {\r\n        getHabitaciones()\r\n    }, [])\r\n\r\n    //función asíncrona que lee todas las reservas y deshabilita los días según su la cantidad de habitaciones disponibles\r\n    const getReservas = async (id, cantidad) => {\r\n        let cantidadHabitaciones = parseInt(cantidad)\r\n        const fechasReservadas = []\r\n        await db.collection(\"Reservas\").where(\"idHabitacion\", \"==\", id).get().then(querySnapshot => {\r\n            querySnapshot.forEach(doc => {\r\n                //se guarda en fechasReservadas todas las fechas entre dos limites(fechaInicial-fechaFinal)\r\n                let fechaFinal = new Date(doc.data().fechaFinal.seconds * 1000)\r\n                let fechaInicial = new Date(doc.data().fechaInicial.seconds * 1000)\r\n                let moment1 = moment(fechaInicial)\r\n                let moment2 = moment(fechaFinal)\r\n                let diferenciaDias = moment2.diff(moment1, 'days') + 1\r\n                for (let i = 0; i < diferenciaDias; i++) {\r\n                    fechasReservadas.push({\r\n                        year: parseInt(moment1.format('YYYY')),\r\n                        month: parseInt(moment1.format('MM')),\r\n                        day: parseInt(moment1.format('D')),\r\n                    })\r\n                    //incrementar un dia\r\n                    moment1.add(1, 'days')\r\n                }\r\n            })\r\n        })\r\n\r\n        //ordena las fechas según compare(leer compare para saber cómo ordena)\r\n        const fechasOrdenadas = fechasReservadas.sort(compare)\r\n        const nuevasFechas = []\r\n\r\n        //por cada fecha en fechasOrdenadas si la fecha no está en nuevasFechas la agrega con cantidad 1\r\n        //si la fecha ya está se incrementa la cantidad\r\n        fechasOrdenadas.forEach(fecha1 => {\r\n            for (let i = 0; i < fechasOrdenadas.length; i++) {\r\n                if (fecha1.month === fechasOrdenadas[i].month && fecha1.year === fechasOrdenadas[i].year && fecha1.day === fechasOrdenadas[i].day) {\r\n                    let index = nuevasFechas.findIndex(x => x.day === fecha1.day && x.month === fecha1.month && x.year === fecha1.year)\r\n                    if (index === -1) {\r\n                        nuevasFechas.push({ ...fecha1, cant: 1 })\r\n                    } else {\r\n                        let { cant } = nuevasFechas[index]\r\n                        let nuevaCant = cant + 1\r\n                        nuevasFechas[index] = { ...fecha1, cant: nuevaCant }\r\n                    }\r\n                    i = fechasOrdenadas.length\r\n                }\r\n            }\r\n        })\r\n\r\n        //por cada fecha en nuevasFechas, si la fecha tiene la misma cantidad que la cantidad de habitaciones\r\n        //la fecha se deshabilita porque se concluye que las habitaciones en ese limite de fechas ya están reservadas\r\n        const diasDeshabilitados = []\r\n        nuevasFechas.forEach(fecha => {\r\n            if (fecha.cant === cantidadHabitaciones) {\r\n                diasDeshabilitados.push(fecha)\r\n            }\r\n        })\r\n        setDiasReservados(diasDeshabilitados)\r\n    }\r\n\r\n    //función que recibe dos fechas y según el día ordena de manera no descendente\r\n    const compare = (fecha1, fecha2) => {\r\n        const dia1 = fecha1.day\r\n        const dia2 = fecha2.day\r\n        let comparador = 0\r\n        if (dia1 > dia2) {\r\n            comparador = 1\r\n        } else {\r\n            comparador = -1\r\n        }\r\n        return comparador\r\n    }\r\n\r\n\r\n    //funcion que recibe una habitacion y preparas sus datos para ser mostrados en el panel derecho\r\n    const handleHabitacion = habitacion => {\r\n        const { id, Nombre, Precio, Complementos, Url, reseñas, Cantidad, Visible } = habitacion\r\n        setHabitacionSeleccionada({\r\n            id,\r\n            Nombre,\r\n            Precio,\r\n            Complementos,\r\n            Url,\r\n            reseñas,\r\n            Cantidad,\r\n            Visible\r\n        })\r\n        getReservas(id, Cantidad)\r\n        setCheck(reseñas)\r\n        setMostrarAgregar(false)\r\n        setMostrarModificar(false)\r\n        setMostrarModificarReseñas(false)\r\n    }\r\n\r\n    //función que prepara la interfaz para poder agregar una habitación\r\n    const handleOnClickAgregar = () => {\r\n        setMostrarAgregar(true)\r\n        setHabitacionSeleccionada({ ...estadoInicial, Complementos: [...estadoInicial.Complementos] })\r\n    }\r\n\r\n    const handleEliminarHabitacion = async (id, fotos) => {\r\n        let habitacion = db.collection(\"Habitaciones\").doc(id)\r\n        swal({\r\n            title: \"Esta seguro?\",\r\n            text: \"La habitacion sera borrada permanentemente!\",\r\n            icon: \"warning\",\r\n            buttons: {\r\n                cancel: true,\r\n                confirm: true,\r\n            }\r\n        }).then(async result => {\r\n            if (result) {\r\n                await habitacion.delete().then(() => {\r\n                    if (fotos !== undefined) {\r\n                        let deleteRef\r\n                        for (let i = 0; i < fotos.length; i++) {\r\n                            deleteRef = storage.refFromURL(fotos[i])\r\n                            deleteRef.delete()\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    swal({\r\n                        text: \"La Habitacion \" + Nombre + \" fue eliminada exitosamente\",\r\n                        icon: \"success\",\r\n                        button: \"Aceptar\"\r\n                    });\r\n                    setHabitacionSeleccionada({ ...estadoInicial, Complementos: [...estadoInicial.Complementos] })\r\n                    getHabitaciones()\r\n                }).catch(function (error) {\r\n                    swal({\r\n                        icon: \"error\",\r\n                        title: \"Error al Eliminar\",\r\n                        text: \"Error: \" + error\r\n                    })\r\n                });\r\n            } else {\r\n                swal(\"Cancelado\", \"La habitacion no se borro\");\r\n            }\r\n        });\r\n    }\r\n\r\n    const mostrarInicial = () => {\r\n        setMostrarAgregar(false)\r\n        setMostrarModificar(false)\r\n        setMostrarModificarReseñas(false)\r\n        setDiasReservados([])\r\n        setHabitacionSeleccionada({ ...estadoInicial, Complementos: [...estadoInicial.Complementos] })\r\n        getHabitaciones()\r\n    }\r\n\r\n    const handleOnClickModificar = () => {\r\n        setMostrarModificar(true)\r\n    }\r\n\r\n    const handleOnClickModificarReseña = () => {\r\n        setMostrarModificarReseñas(true)\r\n    }\r\n\r\n    const { id, Nombre, Precio, Complementos, Url, reseñas, Cantidad, Visible } = habitacionSeleccionada\r\n\r\n    return (\r\n        <div className=\"max-h-screen transform scale-0 sm:scale-100\">\r\n            <div className=\"grid grid-cols-3 bg-gray-100 max-h-screen min-h-screen\">\r\n                <div className=\"col-span-1 flex flex-col max-h-screen min-h-screen rounded-l-sm overflow-y-auto divide-y divide-gray-500 divide-opacity-50\">\r\n                    <div className=\"bg-gray-300 sticky z-10 opacity-95 top-0 rounded-t-md mx-1 mt-1 p-3\">\r\n                        <div className=\"relative grid text-center\">\r\n                            <div className=\"absolute p-1 place-self-end\">\r\n                                <svg className=\"fill-current mx-1 mt-1 cursor-pointer text-blue-500 hover:text-blue-600 h-5 w-5 place-self-center\" onClick={handleOnClickAgregar} viewBox=\"0 0 426.667 426.667\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M405.332 192H234.668V21.332C234.668 9.559 225.109 0 213.332 0 201.559 0 192 9.559 192 21.332V192H21.332C9.559 192 0 201.559 0 213.332c0 11.777 9.559 21.336 21.332 21.336H192v170.664c0 11.777 9.559 21.336 21.332 21.336 11.777 0 21.336-9.559 21.336-21.336V234.668h170.664c11.777 0 21.336-9.559 21.336-21.336 0-11.773-9.559-21.332-21.336-21.332zm0 0\" />\r\n                                </svg>\r\n                            </div>\r\n                            <h2 className=\"font-bold text-lg\">Habitaciones</h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {habitaciones.map((habitacion, index) => {\r\n                        return (habitacionSeleccionada.Nombre === habitacion.Nombre ?\r\n                            (<div key={index} className=\"mx-1 p-4 text-xs text-white font-semibold bg-gray-700 relative cursor-pointer\" onClick={() => handleHabitacion(habitacion)}>\r\n                                {habitacion.Nombre}\r\n                            </div>)\r\n                            :\r\n                            (<div key={index} className=\"mx-1 p-4 text-xs font-semibold hover:bg-gray-200 relative cursor-pointer\" onClick={() => handleHabitacion(habitacion)}>\r\n                                {habitacion.Nombre}\r\n                            </div>)\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"flex col-span-2 max-h-screen min-h-screen overflow-y-auto rounded-r-sm justify-center\">\r\n                    {//se decide que renderizar de acuerdo a los estados mostrarAgregar, mostrarModificar,mostrarModificarReseñas\r\n                        mostrarAgregar\r\n                            ? (<AgregarHabitaciones mostrarInicial={mostrarInicial} habitaciones={habitaciones} />)\r\n                            : mostrarModificar\r\n                                ? <ModificarHabitacion nombre={habitacionSeleccionada.Nombre} mostrarInicial={mostrarInicial} habitaciones={habitaciones} />\r\n                                : mostrarModificarReseñas\r\n                                    ? <ReseñasVisibles reseña={check} id={id} mostrarInicial={mostrarInicial} nombre={habitacionSeleccionada.Nombre} />\r\n                                    : (\r\n                                        <div className=\"h-full w-10/12 px-20 py-8\">\r\n                                            <h1 className=\"font-bold text-center text-2xl mb-5 text-black m-3\"> {Nombre} </h1>\r\n\r\n                                            {Nombre !== \"Nombre de la Habitación\" ? (\r\n                                                <div class=\"grid grid-cols-6 gap-x-2\">\r\n                                                    <div className=\"col-span-2\">\r\n                                                        <button className=\"bg-red-600 text-sm text-white h-10 w-full rounded-md\" onClick={() => handleEliminarHabitacion(id, Url)}>\r\n                                                            Eliminar Habitacion\r\n                                                </button>\r\n                                                    </div>\r\n                                                    <div className=\"col-span-2\">\r\n                                                        <button className=\"bg-blue-700 text-sm text-white h-10 w-full rounded-md\" onClick={handleOnClickModificar}>\r\n                                                            Modificar Habitacion\r\n                                                </button>\r\n                                                    </div>\r\n                                                    <div className=\"col-span-2\">\r\n                                                        <button className=\"bg-blue-700 text-sm text-white h-10 w-full rounded-md\" onClick={handleOnClickModificarReseña}>\r\n                                                            Modificar Reseñas\r\n                                                </button>\r\n                                                    </div>\r\n                                                </div>) : (<></>)\r\n                                            }\r\n\r\n                                            {Visible\r\n                                                ?\r\n                                                <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\r\n                                                    <h2 className=\"text-blue-500 font-semibold cursor-default\">Visible</h2>\r\n                                                    <h2 className=\"text-black pl-4\">Si</h2>\r\n                                                </div>\r\n\r\n                                                :\r\n\r\n                                                <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\r\n                                                    <h2 className=\"text-blue-500 font-semibold cursor-default\">Visible</h2>\r\n                                                    <h2 className=\"text-black pl-4\">No</h2>\r\n                                                </div>\r\n                                            }\r\n\r\n                                            <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\r\n                                                <h2 className=\"text-blue-500 font-semibold cursor-default\">Precio</h2>\r\n                                                <h2 className=\"text-black pl-4\">Lps.{Precio}.00</h2>\r\n                                            </div>\r\n                                            <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\r\n                                                <h2 className=\"text-blue-500 font-semibold cursor-default\">Cantidad de Habitacones</h2>\r\n                                                <h2 className=\"text-black pl-4\">{Cantidad}</h2>\r\n                                            </div>\r\n                                            <div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\r\n                                                <h2 className=\"text-blue-500 font-semibold cursor-default\">Complementos</h2>\r\n                                                {\r\n                                                    Complementos.map(complemento => {\r\n                                                        const { text } = complemento\r\n                                                        return <h2 className=\"text-black pl-4\">{text}</h2>\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            {Url !== undefined\r\n                                                ? (<div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\r\n                                                    <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Fotos</h2>\r\n                                                    <div className=\"grid grid-cols-2 place-items-center\">\r\n                                                        {\r\n                                                            Url.map((foto, index) => {\r\n                                                                return (\r\n                                                                    <img key={index}\r\n                                                                        className=\"h-40 w-40 p-2 object-cover rounded-xl\"\r\n                                                                        alt=\"Habitacion\"\r\n                                                                        src={foto}\r\n                                                                    />)\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>)\r\n                                                : <></>}\r\n                                            {\r\n                                                Nombre !== \"Nombre de la Habitación\" ?\r\n                                                    (<div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\r\n                                                        <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Fechas Reservadas</h2>\r\n                                                        \r\n                                                        <input type=\"date\" id=\"start\" name=\"trip-start\"\r\n                                                            value=\"2018-07-22\"\r\n                                                            min=\"2018-01-01\" max=\"2018-12-31\">\r\n                                                        </input>\r\n                                                    </div>) : <></>\r\n                                            }\r\n                                            {reseñas !== undefined && reseñas.length !== 0\r\n                                                ? (<div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\r\n                                                    <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Reseñas</h2>\r\n                                                    <div className=\"grid\">\r\n                                                        {\r\n                                                            check.map(reseña => {\r\n                                                                let text = \"No\"\r\n                                                                if (reseña.visualizar) {\r\n                                                                    text = \"Sí\"\r\n                                                                }\r\n                                                                return (\r\n                                                                    <div className=\"ml-4 bg-gray-200 p-3 rounded-md my-1 overflow-x-auto\" id={reseña.id}>\r\n                                                                        <div className=\"flex flex-row\">\r\n                                                                            <h2 className=\"font-bold\">Visible:</h2>\r\n                                                                            <h2 className=\"px-1\"> {text}</h2>\r\n                                                                        </div>\r\n                                                                        <div className=\"flex flex-row\">\r\n                                                                            <h2 className=\"font-bold\">Rating:</h2>\r\n                                                                            <h2 className=\"px-1\"> {reseña.rating}</h2>\r\n                                                                            <h2>de 5 estrellas</h2>\r\n                                                                        </div>\r\n                                                                        <div className=\"flex flex-row\">\r\n                                                                            <h2 className=\"font-bold\">Comentario:</h2>\r\n                                                                            <h2 className=\"pl-1\"> {reseña.comentario}</h2>\r\n                                                                        </div>\r\n                                                                        <div className=\"flex flex-row\">\r\n                                                                            <h2 className=\"font-bold\">Usuario:</h2>\r\n                                                                            <h2 className=\"pl-1\"> {reseña.usuario}</h2>\r\n                                                                        </div>\r\n                                                                    </div>)\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>)\r\n                                                : <></>}\r\n                                        </div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaClientes.js",["191"],"import React, { useState, useEffect } from 'react'\r\nimport { db } from '../../firebase'\r\n\r\nexport default function ListaClientes() {\r\n\r\n    const [listaClientes, setLista] = useState([])\r\n    const [cargando, setCargando] = useState(true)\r\n    const [ultimo, setUltimo] = useState({})\r\n    const [nombre, setNombre] = useState(\"Nombre\")\r\n    const [apellido, setApellido] = useState(\"Apellido\")\r\n    const [email, setEmail] = useState(\"john.va@va.org\")\r\n    const [identidad, setIdentidad] = useState(\"0801-2000-08813\")\r\n    const [telefono, setTelefono] = useState(\"9999-9999\")\r\n    const [clienteSeleccionado, setCliente] = useState({})\r\n\r\n    /*funcion que de acuerdo a cómo el usuario hace scroll, genera más datos para mostrar.\r\n        Se llama en el div de la lista, recibe un event que es el que maneja del scroll\r\n    */\r\n    const handleScroll = event => {\r\n        if (ultimo !== undefined) {\r\n            const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\r\n            let bottom = scrollHeight - scrollTop;\r\n            if (Math.floor(bottom) === clientHeight || Math.ceil(bottom) === clientHeight) {\r\n                setCargando(true)\r\n                nextPage(ultimo)\r\n            }\r\n        }\r\n    }\r\n\r\n    //funcion que hace la query de 10 usuarios más que siguen en después del último\r\n    function nextPage(ultimo) {\r\n        if (ultimo !== undefined) {\r\n            let query = db.collection(\"Usuarios\").orderBy(\"Nombre\").startAfter(ultimo).limit(10)\r\n            mostrarQuery(query)\r\n        }\r\n    }\r\n\r\n    //función asincrona que recibe un query la realiza y prepara los datos para ser mostrados\r\n    const mostrarQuery = async (query) => {\r\n        query.onSnapshot((querySnapshot) => {\r\n            const clientes = []\r\n            querySnapshot.forEach((doc) => {\r\n                clientes.push({ ...doc.data(), id: doc.id })\r\n            });\r\n            setLista(listaClientes.concat(clientes))\r\n            const last = querySnapshot.docs[querySnapshot.docs.length - 1]\r\n            if (last !== undefined) {\r\n                setUltimo(last)\r\n            }\r\n        })\r\n        setCargando(false);\r\n    }\r\n\r\n    //función asíncrona que se llama justo al cargarse el componente, muestra 20 usuarios\r\n    const getClientes = async () => {\r\n        let query = db.collection(\"Usuarios\").orderBy(\"Nombre\").limit(20)\r\n        mostrarQuery(query)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getClientes()\r\n    }, [])\r\n\r\n    //función que recibe un cliente y prepara todos sus datos para ser mostrados en el panel derecho\r\n    //los usarios que tengan *Pendiente* deben borrar su cuenta y volver a crearla\r\n    const handleCliente = cliente => {\r\n        setNombre(cliente.Nombre)\r\n        setApellido(cliente.Apellido)\r\n        setEmail(cliente.Email)\r\n        if (cliente.Identidad === undefined){\r\n            setIdentidad(\"*Pendiente*\")\r\n        } else{\r\n            setIdentidad(cliente.Identidad)\r\n        }\r\n        if (cliente.Telefono === undefined){\r\n            setTelefono(\"*Pendiente*\")\r\n        } else {\r\n            setTelefono(cliente.Telefono)\r\n        }\r\n        setCliente(cliente)        \r\n    }\r\n\r\n    return (\r\n        <div className=\"max-h-screen transform scale-0 sm:scale-100\">\r\n            <div className=\"grid grid-cols-3 bg-gray-100 max-h-screen min-h-screen\">\r\n                <div className=\"col-span-1 flex flex-col max-h-screen min-h-screen rounded-l-sm overflow-y-auto divide-y divide-gray-500 divide-opacity-50\" onScroll={handleScroll}>\r\n                    <div className=\"bg-gray-300 sticky z-10 opacity-95 top-0 rounded-t-md mx-1 mt-1 p-3 text-center font-bold text-lg\">\r\n                        Clientes\r\n                    </div>\r\n\r\n                    {listaClientes.map(cliente => {\r\n                        return ( clienteSeleccionado.Identidad === cliente.Identidad ?\r\n                            (<div className=\"mx-1 p-4 text-xs text-white font-semibold bg-gray-700 relative cursor-pointer\" onClick={() => handleCliente(cliente)}>\r\n                                {cliente.Nombre} {cliente.Apellido}                               \r\n                            </div>)\r\n                            :\r\n                            (<div className=\"mx-1 p-4 text-xs font-semibold hover:bg-gray-200 relative cursor-pointer\" onClick={() => handleCliente(cliente)}>\r\n                                {cliente.Nombre} {cliente.Apellido}                                \r\n                            </div>)\r\n                        )\r\n                    })}\r\n                    {cargando &&\r\n                        <cargando className=\"text-center mx-1 p-4 text-xs font-semibold\">\r\n                            Cargando...\r\n                        </cargando>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"flex col-span-2 max-h-screen min-h-screen rounded-r-sm justify-center\">\r\n                    <div className=\"h-full w-10/12 px-20 py-16\">\r\n                        <h1 className=\"font-bold text-center text-2xl mb-10 text-black m-3\"> {nombre} {apellido} </h1>\r\n                        <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\r\n                            <h2 className=\"text-blue-500 font-semibold cursor-default\">Número de Identidad</h2>\r\n                            <h2 className=\"text-black\">{identidad}</h2>\r\n                        </div>\r\n                        <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\r\n                            <h2 className=\"text-blue-500 font-semibold cursor-default\">Email</h2>\r\n                            <h2 className=\"text-black\">{email}</h2>\r\n                        </div>                        \r\n                        <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\r\n                            <h2 className=\"text-blue-500 font-semibold cursor-default\">Teléfono</h2>\r\n                            <h2 className=\"text-black\">{telefono}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaServicios.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaMenu.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ListaReservas.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Dropdown.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ReseñasVisibles.js",["192","193","194","195","196"],"import React, { useState, useEffect } from 'react'\r\nimport { db, storage } from '../../firebase'\r\nimport swal from 'sweetalert'\r\nimport PreviousMap from 'postcss/lib/previous-map'\r\n\r\nexport default function ReseñasVisibles(props) {\r\n\r\n    const [check, setCheck] = useState([])\r\n\r\n    const handleCheckbox = (e) => {\r\n        let lista = []\r\n        let nombre = e.target.id\r\n        for (let index = 0; index < check.length; index++) {\r\n            const element = check[index];\r\n            if (element.id === nombre) {\r\n                let temp = { id: element.id, comentario: element.comentario, rating: element.rating, usuario: element.usuario, visualizar: !element.visualizar };\r\n                lista.push(temp)\r\n            } else {\r\n                lista.push(element)\r\n            }\r\n        }\r\n\r\n        setCheck(lista)\r\n    }\r\n\r\n    const handleUpload = (e) => {\r\n        e.preventDefault()\r\n\r\n        check.map(doc => {\r\n            db.collection(\"Habitaciones\").doc(props.id).collection(\"Reseñas\").doc(doc.id).set({\r\n                comentario: doc.comentario,\r\n                rating: doc.rating,\r\n                visualizar: doc.visualizar,\r\n                usuario: doc.usuario,\r\n            }).then(() => {\r\n                alertaSuccess()\r\n                props.mostrarInicial()\r\n            }).catch(() => {\r\n            })\r\n        })\r\n    }\r\n\r\n    const alertaSuccess = () => {\r\n        swal({\r\n            text: \"Las Reseñas fueron modificadas exitosamente\",\r\n            icon: \"success\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCheck(props.reseña)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"h-full w-10/12 px-20 py-8\">\r\n            <h1 className=\"font-bold text-center text-2xl mb-5 text-black m-3\"> {props.nombre} </h1>\r\n\r\n            <div className=\"bg-gray-100 my-4 py-4 px-6 rounded-md\">\r\n                <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Reseñas</h2>\r\n                <div className=\"grid\">\r\n                    {\r\n                        check.map(reseña => {\r\n\r\n                            return (\r\n                                <div className=\" bg-gray-200 p-3 rounded-md my-1 overflow-x-auto\" id={reseña.id}>\r\n                                    <div className=\"flex flex-row\">\r\n                                        <h2 className=\"font-bold\">Visible:</h2>\r\n                                        <div>\r\n                                            <input className=\"form-checkbox h-4 w-4 text-red-600\" id={reseña.id} onChange={handleCheckbox} checked={reseña.visualizar} type=\"checkbox\" id={reseña.id} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex flex-row\">\r\n                                        <h2 className=\"font-bold\">Rating:</h2>\r\n                                        <h2 className=\"px-1\"> {reseña.rating}</h2>\r\n                                        <h2>de 5 estrellas</h2>\r\n                                    </div>\r\n                                    <div className=\"flex flex-row\">\r\n                                        <h2 className=\"font-bold\">Comentario:</h2>\r\n                                        <h2 className=\"pl-1\"> {reseña.comentario}</h2>\r\n                                    </div>\r\n                                    <div className=\"flex flex-row\">\r\n                                        <h2 className=\"font-bold\">Usuario:</h2>\r\n                                        <h2 className=\"pl-1\"> {reseña.usuario}</h2>\r\n                                    </div>\r\n                                </div>)\r\n                        })\r\n                    }\r\n                    <button onClick={handleUpload} class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Modificar Reseñas</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\AgregarServicios.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React, { useState, useMemo, useEffect } from 'react'\r\nimport { db } from '../../firebase'\r\nimport swal from 'sweetalert'\r\nimport { storage } from '../../firebase';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Items from '../AgregarItems/Items'\r\nimport Form from '../AgregarItems/Form'\r\nimport { TiMediaPlayOutline } from 'react-icons/ti';\r\nimport Loading from './Loading'\r\n\r\nfunction AgregarServicios(props) {\r\n\r\n    const [Nombre, setNombre] = useState(\"\");\r\n    const [Precio, setPrecio] = useState(\"\");\r\n    const [files, setFiles] = useState([]);\r\n    const [Url, setUrl] = useState([]);\r\n    const [progress, setProgress] = useState(0);\r\n    const [todos, setTodos] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [detallesDrop, setDetallesDrop] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [visible, setVisible] = useState(true);\r\n    const [num, setNum] = useState(0);\r\n\r\n\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    })\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n    const thumbsContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 16\r\n    };\r\n\r\n    const thumb = {\r\n        display: 'inline-flex',\r\n        borderRadius: 2,\r\n        border: '1px solid #eaeaea',\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: 100,\r\n        height: 100,\r\n        padding: 4,\r\n        boxSizing: 'border-box'\r\n    };\r\n\r\n    const thumbInner = {\r\n        display: 'flex',\r\n        minWidth: 0,\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const img = {\r\n        display: 'block',\r\n        width: 'auto',\r\n        height: '100%'\r\n    };\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    const alertaSuccess = () => {\r\n        swal({\r\n            text: \"El Servicio \" + Nombre + \" fue agregado exitosamente\",\r\n            icon: \"success\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const alertaFail = () => {\r\n        swal({\r\n            text: \"El Servicio \" + Nombre + \" no se pudo agregar\",\r\n            icon: \"error\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const alertaFotos = () => {\r\n        swal({\r\n            text: \"El Servicio\" + Nombre + \" no tiene imagenes\",\r\n            icon: \"error\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const handleUpload = async (event) => {\r\n        event.preventDefault()\r\n        let dirFotos = [];\r\n        let uploadTask = null;\r\n        if (files.length !== 0) {\r\n            setShowModal(prev => !prev);\r\n            for (var i = 0; i < files.length; i++) {\r\n                const nombreFoto = files[i].name;\r\n                uploadTask = await storage.ref(`servicios/${nombreFoto}`).put(files[i]);\r\n\r\n                let Links = await storage\r\n                    .ref(\"servicios\")\r\n                    .child(nombreFoto)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        dirFotos.push(url)\r\n                    });\r\n            }\r\n\r\n            db.collection(\"Servicios\").doc(Nombre).set({\r\n                Nombre: Nombre,\r\n                Precio: Precio,\r\n                Detalles: todos,\r\n                Url: dirFotos,\r\n                Visible: visible\r\n            }).then(() => {\r\n                setShowModal(prev => !prev);\r\n                alertaSuccess()\r\n                setNum(prevNum => prevNum - 1)\r\n                props.mostrarInicial()\r\n            }).catch(() => {\r\n                setShowModal(prev => !prev);\r\n                alertaFail()\r\n            })\r\n        } else {\r\n            alertaFotos()\r\n        }\r\n    };\r\n    //<progress value={progress} max=\"100\" />\r\n\r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img\r\n                    alt=\"\"\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    useEffect(() => {\r\n        if (num === 0) {\r\n            const lista = []\r\n            const ListaServicios = props.servicios\r\n            ListaServicios.map((h) => {\r\n                const Complementos = h.Detalles\r\n                Complementos.map((deta) => {\r\n                    const { text } = deta\r\n                    lista.push(text)\r\n                })\r\n            })\r\n\r\n            const lista2 = lista.filter(function(elem, pos) {\r\n                return lista.indexOf(elem) == pos;\r\n            });\r\n\r\n            setDetallesDrop(lista2)\r\n            setNum(prevNum => prevNum + 1)\r\n        }\r\n    }, []);\r\n\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removedArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(prevOpen => !prevOpen)\r\n    }\r\n\r\n    const agregarDelDrop = (e) => {\r\n        console.log(e.target.name)\r\n        const t = { id: Math.floor(Math.random() * 10000), text: e.target.name }\r\n        addTodo(t)\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {\r\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\r\n                    : <div className=\"grid min-h-screen place-items-center\">\r\n                        <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\r\n                            <h1 className=\"text-xl font-semibold text-center\">Ingrese información sobre el servicio</h1>\r\n                            <form onSubmit={handleUpload} className=\"mt-6\">\r\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre del Servicio</label>\r\n                                <input onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\r\n                                <input onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\r\n\r\n                                <div class=\"relative group inline-block\">\r\n                                    <div onClick={handleOpen} class=\"inline-flex justify-center w-full rounded-md shadow-sm px-40 py-2 bg-blue-900 text-sm font-medium text-white my-2\">\r\n                                        Detalles Pasados\r\n                                            <svg class=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                        </svg>\r\n                                    </div>\r\n\r\n                                    <div class={open ? (\"px-40 py-1 w-full absolute rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\") : \"hidden\"}>\r\n                                        {\r\n                                            detallesDrop.map((text) => {\r\n                                                return (\r\n                                                    <a onClick={agregarDelDrop} name={text} class=\"block px-12 flex text-sm text-black border-b-2 border-transparent hover:border-blue-800\">{text}</a>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <Form onSubmit={addTodo} />\r\n                                <Items\r\n                                    todos={todos}\r\n                                    completeTodo={completeTodo}\r\n                                    removeTodo={removeTodo}\r\n                                    updateTodo={updateTodo}\r\n                                />\r\n\r\n                                <div class=\"py-6\">\r\n                                    <section className=\"container\">\r\n                                        <div {...getRootProps({ className: 'dropzone', style })}>\r\n                                            <input {...getInputProps()} />\r\n                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                        </div>\r\n                                        <aside style={thumbsContainer}>\r\n                                            {thumbs}\r\n                                        </aside>\r\n                                    </section>\r\n                                </div>\r\n                                <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Agregar Servicio</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AgregarServicios","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ModificarHabitacion.js",["211","212","213","214","215","216","217","218","219"],"import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { db, storage } from '../../firebase';\r\nimport Items from '../AgregarItems/Items'\r\nimport Form from '../AgregarItems/Form'\r\nimport swal from 'sweetalert'\r\nimport Loading from './Loading'\r\n\r\nfunction ModificarHabitacion(props) {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [nombre, setNombre] = useState(\"\");\r\n    const [precio, setPrecio] = useState(\"\");\r\n    const [url, setUrl] = useState([]);\r\n    const [files, setFiles] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [visible, setVisible] = useState(true);\r\n    const [cantidad, setCantidad] = useState(0);\r\n    const [tempVisible, setTempVisible] = useState(true);\r\n    const [detallesDrop, setDetallesDrop] = useState(() => {\r\n        return []\r\n    })\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    })\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n    const thumbsContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 16\r\n    };\r\n\r\n    const thumb = {\r\n        display: 'inline-flex',\r\n        borderRadius: 2,\r\n        border: '1px solid #eaeaea',\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: 100,\r\n        height: 100,\r\n        padding: 4,\r\n        boxSizing: 'border-box'\r\n    };\r\n\r\n    const thumbInner = {\r\n        display: 'flex',\r\n        minWidth: 0,\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const img = {\r\n        display: 'block',\r\n        width: 'auto',\r\n        height: '100%'\r\n    };\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img\r\n                    alt=\"\"\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    useEffect(() => {\r\n        setNombre(props.nombre)\r\n        db.collection(\"Habitaciones\").where(\"Nombre\", \"==\", props.nombre)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    setNombre(doc.data().Nombre)\r\n                    setTodos(doc.data().Complementos)\r\n                    setPrecio(doc.data().Precio)\r\n                    setUrl(doc.data().Url)\r\n                    setCantidad(doc.data().Cantidad)\r\n                    setVisible(doc.data().Visible)\r\n                    setTempVisible(doc.data().Visible)\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n\r\n        const lista = []\r\n        const listaHabitaciones = props.habitaciones\r\n        listaHabitaciones.map((h) => {\r\n            const Complementos = h.Complementos\r\n            Complementos.map((deta) => {\r\n                const { text } = deta\r\n                lista.push(text)\r\n            })\r\n        })\r\n\r\n        const lista2 = lista.filter(function (elem, pos) {\r\n            return lista.indexOf(elem) == pos;\r\n        });\r\n\r\n        setDetallesDrop(lista2)\r\n    }, [])\r\n\r\n\r\n    const alertaSuccess = () => {\r\n        swal({\r\n            text: \"La Habitacion se modifico exitosamente\",\r\n            icon: \"success\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removedArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const handleModificarFotos = (event) => {\r\n        event.preventDefault()\r\n        var element\r\n        var index\r\n        for (index = 0; index < url.length; index++) {\r\n            element = url[index];\r\n            if (element === event.target.id) {\r\n                break\r\n            }\r\n        }\r\n\r\n        let deleteRef\r\n        deleteRef = storage.refFromURL(element)\r\n        deleteRef.delete()\r\n\r\n        const temp = [...url];\r\n        temp.splice(index, 1);\r\n        setUrl(temp);\r\n    }\r\n\r\n    const handleUpload = async (event) => {\r\n        event.preventDefault()\r\n\r\n        let dirFotos = [];\r\n        let uploadTask = null;\r\n\r\n        url.map(ur => {\r\n            dirFotos.push(ur)\r\n        })\r\n        setShowModal(prev => !prev);\r\n        if (files.length >= 0) {\r\n            for (var i = 0; i < files.length; i++) {\r\n                const nombreFoto = files[i].name;\r\n                uploadTask = await storage.ref(`habitaciones/${nombreFoto}`).put(files[i]);\r\n\r\n                let Links = await storage\r\n                    .ref(\"habitaciones\")\r\n                    .child(nombreFoto)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        dirFotos.push(url)\r\n                    });\r\n            }\r\n        }\r\n\r\n        db.collection(\"Habitaciones\").doc(nombre).set({\r\n            Nombre: nombre,\r\n            Precio: precio,\r\n            Complementos: todos,\r\n            Url: dirFotos,\r\n            Cantidad: cantidad,\r\n            Visible: visible\r\n        }).then(() => {\r\n            setShowModal(prev => !prev);\r\n            alertaSuccess()\r\n            props.mostrarInicial()\r\n        }).catch(() => {\r\n            setShowModal(prev => !prev);\r\n        })\r\n    }\r\n\r\n    const habitacionVisible = (e) => {\r\n        if (e.target.value === \"Si\") {\r\n            setVisible(false)\r\n        } else {\r\n            setVisible(true)\r\n        }\r\n    }\r\n\r\n    const agregarDelDrop = (e) => {\r\n        const t = { id: Math.floor(Math.random() * 10000), text: e.target.name }\r\n        addTodo(t)\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(prevOpen => !prevOpen)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\r\n                    : <div>\r\n                        <div className=\"grid min-h-screen place-items-center\">\r\n                            <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\r\n                                <h1 className=\"text-xl font-semibold text-center\">Modifique la información sobre la habitación</h1>\r\n                                <form onSubmit={handleUpload} className=\"mt-6\">\r\n                                    <label class=\"block\">\r\n                                        <span class=\"text-gray-700\">Ocultar Habitacion</span>\r\n                                        <select onChange={habitacionVisible} class=\"form-select block w-full mt-1 bg-gray-200\">\r\n                                            <>\r\n                                                {tempVisible ?\r\n                                                    <>\r\n                                                        <option>No</option>\r\n                                                        <option>Si</option>\r\n                                                    </> :\r\n                                                    <>\r\n                                                        <option>Si</option>\r\n                                                        <option>No</option>\r\n                                                    </>\r\n                                                }\r\n                                            </>\r\n                                        </select>\r\n                                    </label>\r\n\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre de la habitación</label>\r\n                                    <input value={nombre} onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" disabled required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\r\n                                    <input value={precio} onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Cantidad</label>\r\n                                    <input value={cantidad} onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"cantidad\" placeholder=\"5\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\r\n\r\n                                    <div class=\"relative group inline-block\">\r\n                                        <div onClick={handleOpen} class=\"inline-flex justify-center w-full rounded-md shadow-sm px-40 py-2 bg-blue-900 text-sm font-medium text-white my-2\">\r\n                                            Detalles Pasados\r\n                                            <svg class=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                                <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                            </svg>\r\n                                        </div>\r\n\r\n                                        <div class={open ? (\"px-40 py-1 w-full absolute rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\") : \"hidden\"}>\r\n                                            {\r\n                                                detallesDrop.map((text) => {\r\n                                                    return (\r\n                                                        <a onClick={agregarDelDrop} name={text} class=\"block px-12 flex text-sm text-black border-b-2 border-transparent hover:border-blue-800\">{text}</a>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <Form onSubmit={addTodo} />\r\n                                    <Items\r\n                                        todos={todos}\r\n                                        completeTodo={completeTodo}\r\n                                        removeTodo={removeTodo}\r\n                                        updateTodo={updateTodo}\r\n                                    />\r\n\r\n                                    <div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\r\n                                        <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Fotos</h2>\r\n                                        <div className=\"grid grid-cols-2 place-items-center\">\r\n                                            {\r\n                                                url.map(foto => {\r\n                                                    return (\r\n                                                        <div>\r\n                                                            <div class=\"relative bg-gray-300 rounded-2xl m-auto py-2 px-2\">\r\n                                                                <button className=\"absolute top-0 right-0\" onClick={handleModificarFotos}>\r\n                                                                    <svg class=\"fill-current text-red-500 h-8 w-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                                                        <path id={foto} fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\r\n                                                                    </svg>\r\n                                                                </button>\r\n                                                                <img\r\n                                                                    className=\"h-40 w-40 object-cover rounded-xl\"\r\n                                                                    alt=\"Habitacion\"\r\n                                                                    src={foto}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"py-6\">\r\n                                        <section className=\"container\">\r\n                                            <div {...getRootProps({ className: 'dropzone', style })}>\r\n                                                <input {...getInputProps()} />\r\n                                                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                            </div>\r\n                                            <aside style={thumbsContainer}>\r\n                                                {thumbs}\r\n                                            </aside>\r\n                                        </section>\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Modificar Habitacion</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModificarHabitacion\r\n","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ModificarServicios.js",["220","221","222","223","224","225","226","227","228"],"import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { db, storage } from '../../firebase';\r\nimport Items from '../AgregarItems/Items'\r\nimport Form from '../AgregarItems/Form'\r\nimport swal from 'sweetalert'\r\nimport Loading from './Loading'\r\n\r\nfunction ModificarServicios(props) {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [nombre, setNombre] = useState(\"\");\r\n    const [precio, setPrecio] = useState(\"\");\r\n    const [url, setUrl] = useState([]);\r\n    const [files, setFiles] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [visible, setVisible] = useState();\r\n    const [tempVisible, setTempVisible] = useState();\r\n    const [detallesDrop, setDetallesDrop] = useState(() => {\r\n        return []\r\n    })\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    })\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n    const thumbsContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 16\r\n    };\r\n\r\n    const thumb = {\r\n        display: 'inline-flex',\r\n        borderRadius: 2,\r\n        border: '1px solid #eaeaea',\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: 100,\r\n        height: 100,\r\n        padding: 4,\r\n        boxSizing: 'border-box'\r\n    };\r\n\r\n    const thumbInner = {\r\n        display: 'flex',\r\n        minWidth: 0,\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const img = {\r\n        display: 'block',\r\n        width: 'auto',\r\n        height: '100%'\r\n    };\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img\r\n                    alt=\"\"\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const handleUpload = async (event) => {\r\n        event.preventDefault()\r\n\r\n        let dirFotos = [];\r\n        let uploadTask = null;\r\n\r\n        url.map(ur => {\r\n            dirFotos.push(ur)\r\n        })\r\n        setShowModal(prev => !prev);\r\n        if (files.length >= 0) {\r\n            for (var i = 0; i < files.length; i++) {\r\n                const nombreFoto = files[i].name;\r\n                uploadTask = await storage.ref(`servicios/${nombreFoto}`).put(files[i]);\r\n\r\n                let Links = await storage\r\n                    .ref(\"servicios\")\r\n                    .child(nombreFoto)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        dirFotos.push(url)\r\n                    });\r\n            }\r\n        }\r\n\r\n        db.collection(\"Servicios\").doc(nombre).set({\r\n            Nombre: nombre,\r\n            Precio: precio,\r\n            Detalles: todos,\r\n            Url: dirFotos,\r\n            Visible: visible\r\n        }).then(() => {\r\n            setShowModal(prev => !prev);\r\n            alertaSuccess()\r\n            props.mostrarInicial()\r\n        }).catch(() => {\r\n            setShowModal(prev => !prev);\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNombre(props.nombre)\r\n        db.collection(\"Servicios\").where(\"Nombre\", \"==\", props.nombre)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    setNombre(doc.data().Nombre)\r\n                    setTodos(doc.data().Detalles)\r\n                    setPrecio(doc.data().Precio)\r\n                    setUrl(doc.data().Url)\r\n                    setTempVisible(doc.data().Visible)\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n\r\n        const lista = []\r\n        const listaServicios = props.servicios\r\n        listaServicios.map((h) => {\r\n            const Complementos = h.Detalles\r\n            Complementos.map((deta) => {\r\n                const { text } = deta\r\n                lista.push(text)\r\n            })\r\n        })\r\n\r\n        const lista2 = lista.filter(function (elem, pos) {\r\n            return lista.indexOf(elem) == pos;\r\n        });\r\n\r\n        setDetallesDrop(lista2)\r\n    }, [])\r\n\r\n\r\n    const alertaSuccess = () => {\r\n        swal({\r\n            text: \"El Servicio se modifico exitosamente\",\r\n            icon: \"success\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    //<progress value={progress} max=\"100\" />\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removedArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const handleModificarFotos = (event) => {\r\n        event.preventDefault()\r\n        var element\r\n        var index\r\n        for (index = 0; index < url.length; index++) {\r\n            element = url[index];\r\n            if (element === event.target.id) {\r\n                break\r\n            }\r\n        }\r\n\r\n        let deleteRef\r\n        deleteRef = storage.refFromURL(element)\r\n        deleteRef.delete()\r\n\r\n        const temp = [...url];\r\n        temp.splice(index, 1);\r\n        setUrl(temp);\r\n    }\r\n\r\n    const agregarDelDrop = (e) => {\r\n        const t = { id: Math.floor(Math.random() * 10000), text: e.target.name }\r\n        addTodo(t)\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(prevOpen => !prevOpen)\r\n    }\r\n\r\n    const habitacionVisible = (e) => {\r\n        if (e.target.value === \"Si\") {\r\n            setVisible(false)\r\n        } else {\r\n            setVisible(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\r\n                    : <div>\r\n                        <div className=\"grid min-h-screen place-items-center\">\r\n                            <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\r\n                                <h1 className=\"text-xl font-semibold text-center\">Modifique la información sobre el servicio</h1>\r\n                                <form onSubmit={handleUpload} className=\"mt-6\">\r\n\r\n                                    <label class=\"block\">\r\n                                        <span class=\"text-gray-700\">Ocultar Servicio</span>\r\n                                        <select onChange={habitacionVisible} class=\"form-select block w-full mt-1 bg-gray-200\">\r\n                                            <>\r\n                                                {tempVisible ?\r\n                                                    <>\r\n                                                        <option>No</option>\r\n                                                        <option>Si</option>\r\n                                                    </> :\r\n                                                    <>\r\n                                                        <option>Si</option>\r\n                                                        <option>No</option>\r\n                                                    </>\r\n                                                }\r\n                                            </>\r\n                                        </select>\r\n                                    </label>\r\n\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre del servicio</label>\r\n                                    <input value={nombre} onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" disabled required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\r\n                                    <input value={precio} onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\r\n\r\n                                    <div class=\"relative group inline-block\">\r\n                                        <div onClick={handleOpen} class=\"inline-flex justify-center w-full rounded-md shadow-sm px-40 py-2 bg-blue-900 text-sm font-medium text-white my-2\">\r\n                                            Detalles Pasados\r\n                                            <svg class=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                                <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                            </svg>\r\n                                        </div>\r\n\r\n                                        <div class={open ? (\"px-40 py-1 w-full absolute rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\") : \"hidden\"}>\r\n                                            {\r\n                                                detallesDrop.map((text) => {\r\n                                                    return (\r\n                                                        <a onClick={agregarDelDrop} name={text} class=\"block px-12 flex text-sm text-black border-b-2 border-transparent hover:border-blue-800\">{text}</a>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Form onSubmit={addTodo} />\r\n                                    <Items\r\n                                        todos={todos}\r\n                                        completeTodo={completeTodo}\r\n                                        removeTodo={removeTodo}\r\n                                        updateTodo={updateTodo}\r\n                                    />\r\n\r\n                                    <div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\r\n                                        <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Fotos</h2>\r\n                                        <div className=\"grid grid-cols-2 place-items-center\">\r\n                                            {\r\n                                                url.map(foto => {\r\n                                                    return (\r\n                                                        <div>\r\n                                                            <div class=\"relative bg-gray-300 rounded-2xl m-auto py-2 px-2\">\r\n                                                                <button className=\"absolute top-0 right-0\" onClick={handleModificarFotos}>\r\n                                                                    <svg class=\"fill-current text-red-500 h-8 w-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                                                        <path id={foto} fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\r\n                                                                    </svg>\r\n                                                                </button>\r\n                                                                <img\r\n                                                                    className=\"h-40 w-40 object-cover rounded-xl\"\r\n                                                                    alt=\"Habitacion\"\r\n                                                                    src={foto}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"py-6\">\r\n                                        <section className=\"container\">\r\n                                            <div {...getRootProps({ className: 'dropzone', style })}>\r\n                                                <input {...getInputProps()} />\r\n                                                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                            </div>\r\n                                            <aside style={thumbsContainer}>\r\n                                                {thumbs}\r\n                                            </aside>\r\n                                        </section>\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Modificar Servicio</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModificarServicios\r\n","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\AgregarHabitaciones.js",["229","230","231","232","233","234","235","236","237","238","239","240"],"import React, { useState, useMemo, useEffect } from 'react'\r\nimport { db } from '../../firebase'\r\nimport swal from 'sweetalert'\r\nimport { storage } from '../../firebase';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Items from '../AgregarItems/Items'\r\nimport Form from '../AgregarItems/Form'\r\nimport { TiMediaPlayOutline } from 'react-icons/ti';\r\nimport Loading from './Loading'\r\n\r\nfunction AgregarHabitaciones(props) {\r\n\r\n    const [Nombre, setNombre] = useState(\"\");\r\n    const [Precio, setPrecio] = useState(\"\");\r\n    const [files, setFiles] = useState([]);\r\n    const [Url, setUrl] = useState([]);\r\n    const [num, setNum] = useState(0);\r\n    const [todos, setTodos] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [detallesDrop, setDetallesDrop] = useState(() => {\r\n        return []\r\n    })\r\n    const [open, setOpen] = useState(false);\r\n    const [cantidad, setCantidad] = useState(0);\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(prevOpen => !prevOpen)\r\n    }\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    })\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n    const thumbsContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 16\r\n    };\r\n\r\n    const thumb = {\r\n        display: 'inline-flex',\r\n        borderRadius: 2,\r\n        border: '1px solid #eaeaea',\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: 100,\r\n        height: 100,\r\n        padding: 4,\r\n        boxSizing: 'border-box'\r\n    };\r\n\r\n    const thumbInner = {\r\n        display: 'flex',\r\n        minWidth: 0,\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const img = {\r\n        display: 'block',\r\n        width: 'auto',\r\n        height: '100%'\r\n    };\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    const alertaSuccess = () => {\r\n        swal({\r\n            text: \"La Habitacion \" + Nombre + \" fue agregado exitosamente\",\r\n            icon: \"success\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const alertaFail = () => {\r\n        swal({\r\n            text: \"La Habitacion \" + Nombre + \" no se pudo agregar\",\r\n            icon: \"error\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const alertaFotos = () => {\r\n        swal({\r\n            text: \"La Habitacion\" + Nombre + \" no tiene imagenes\",\r\n            icon: \"error\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const handleUpload = async (event) => {\r\n        event.preventDefault()\r\n        let dirFotos = [];\r\n        let uploadTask = null;\r\n        if (files.length !== 0) {\r\n            setShowModal(prev => !prev);\r\n            for (var i = 0; i < files.length; i++) {\r\n                const nombreFoto = files[i].name;\r\n                uploadTask = await storage.ref(`habitaciones/${nombreFoto}`).put(files[i]);\r\n\r\n                let Links = await storage\r\n                    .ref(\"habitaciones\")\r\n                    .child(nombreFoto)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        dirFotos.push(url)\r\n                    });\r\n            }\r\n\r\n            db.collection(\"Habitaciones\").doc().set({\r\n                Nombre: Nombre,\r\n                Precio: Precio,\r\n                Complementos: todos,\r\n                Url: dirFotos,\r\n                Cantidad: cantidad,\r\n                Visible: visible\r\n            }).then(() => {\r\n                setShowModal(prev => !prev);\r\n                alertaSuccess()\r\n                setNum(prevNum => prevNum - 1)\r\n                props.mostrarInicial()\r\n            }).catch(() => {\r\n                setShowModal(prev => !prev);\r\n                alertaFail()\r\n            })\r\n        } else {\r\n            alertaFotos()\r\n        }\r\n    };\r\n    //<progress value={progress} max=\"100\" />\r\n\r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img\r\n                    alt=\"\"\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    useEffect(() => {\r\n        if (num === 0) {\r\n            const lista = []\r\n            const listaHabitaciones = props.habitaciones\r\n            listaHabitaciones.map((h) => {\r\n                const Complementos = h.Complementos\r\n                Complementos.map((deta) => {\r\n                    const { text } = deta\r\n                    lista.push(text)\r\n                })\r\n            })\r\n\r\n            const lista2 = lista.filter(function(elem, pos) {\r\n                return lista.indexOf(elem) == pos;\r\n            });\r\n\r\n            setDetallesDrop(lista2)\r\n            setNum(prevNum => prevNum + 1)\r\n        }\r\n    });\r\n\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removedArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const agregarDelDrop = (e) => {\r\n        const t = { id: Math.floor(Math.random() * 10000), text: e.target.name }\r\n        addTodo(t)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\r\n                    : <div>\r\n                        <div className=\"grid min-h-screen place-items-center\">\r\n                            <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\r\n                                <h1 className=\"text-xl font-semibold text-center\">Ingrese información sobre la habitacion</h1>\r\n                                <form onSubmit={handleUpload} className=\"mt-6\">\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre de la habitacion</label>\r\n                                    <input onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\r\n                                    <input onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Cantidad de habitaciones</label>\r\n                                    <input onChange={event => setCantidad(event.target.value)} type=\"number\" name=\"cantidad\" placeholder=\"5\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\r\n                                    <div className=\"py-1\" />\r\n\r\n                                    <div class=\"relative group inline-block\">\r\n                                        <div onClick={handleOpen} class=\"inline-flex justify-center w-full rounded-md shadow-sm px-40 py-2 bg-blue-900 text-sm font-medium text-white my-2\">\r\n                                            Detalles Pasados\r\n                                            <svg class=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                                <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                            </svg>\r\n                                        </div>\r\n\r\n                                        <div class={open ? (\"px-40 py-1 w-full absolute rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\") : \"hidden\"}>\r\n                                            {\r\n                                                detallesDrop.map((text) => {\r\n                                                    return (\r\n                                                        <a onClick={agregarDelDrop} name={text} class=\"block px-12 flex text-sm text-black border-b-2 border-transparent hover:border-blue-800\">{text}</a>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <Form onSubmit={addTodo} />\r\n                                    <Items\r\n                                        todos={todos}\r\n                                        completeTodo={completeTodo}\r\n                                        removeTodo={removeTodo}\r\n                                        updateTodo={updateTodo}\r\n                                    />\r\n\r\n                                    <div class=\"py-6\">\r\n                                        <section className=\"container\">\r\n                                            <div {...getRootProps({ className: 'dropzone', style })}>\r\n                                                <input {...getInputProps()} />\r\n                                                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                            </div>\r\n                                            <aside style={thumbsContainer}>\r\n                                                {thumbs}\r\n                                            </aside>\r\n                                        </section>\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Agregar Habitacion</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AgregarHabitaciones","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\ModificarMenu.js",["241","242","243","244","245","246","247","248","249"],"import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { db, storage } from '../../firebase';\r\nimport Items from '../AgregarItems/Items'\r\nimport Form from '../AgregarItems/Form'\r\nimport swal from 'sweetalert'\r\nimport Loading from './Loading'\r\n\r\nfunction ModificarMenu(props) {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [nombre, setNombre] = useState(\"\");\r\n    const [url, setUrl] = useState([]);\r\n    const [files, setFiles] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [visible, setVisible] = useState();\r\n    const [tempVisible, setTempVisible] = useState();\r\n    const [detallesDrop, setDetallesDrop] = useState(() => {\r\n        return []\r\n    })\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    })\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n    const thumbsContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 16\r\n    };\r\n\r\n    const thumb = {\r\n        display: 'inline-flex',\r\n        borderRadius: 2,\r\n        border: '1px solid #eaeaea',\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: 100,\r\n        height: 100,\r\n        padding: 4,\r\n        boxSizing: 'border-box'\r\n    };\r\n\r\n    const thumbInner = {\r\n        display: 'flex',\r\n        minWidth: 0,\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const img = {\r\n        display: 'block',\r\n        width: 'auto',\r\n        height: '100%'\r\n    };\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img\r\n                    alt=\"\"\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const handleUpload = async (event) => {\r\n        event.preventDefault()\r\n\r\n        let dirFotos = [];\r\n        let uploadTask = null;\r\n\r\n        url.map(ur => {\r\n            dirFotos.push(ur)\r\n        })\r\n        setShowModal(prev => !prev);\r\n        if (files.length >= 0) {\r\n            for (var i = 0; i < files.length; i++) {\r\n                const nombreFoto = files[i].name;\r\n                uploadTask = await storage.ref(`menu/${nombreFoto}`).put(files[i]);\r\n\r\n                let Links = await storage\r\n                    .ref(\"menu\")\r\n                    .child(nombreFoto)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        dirFotos.push(url)\r\n                    });\r\n            }\r\n        }\r\n\r\n        db.collection(\"Menu\").doc(nombre).set({\r\n            Nombre: nombre,\r\n            Detalles: todos,\r\n            Url: dirFotos,\r\n            Visible: visible\r\n        }).then(() => {\r\n            setShowModal(prev => !prev);\r\n            alertaSuccess()\r\n            props.mostrarInicial()\r\n        }).catch(() => {\r\n            setShowModal(prev => !prev);\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNombre(props.nombre)\r\n        db.collection(\"Menu\").where(\"Nombre\", \"==\", props.nombre)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    setNombre(doc.data().Nombre)\r\n                    setTodos(doc.data().Detalles)\r\n                    setUrl(doc.data().Url)\r\n                    setTempVisible(doc.data().Visible)\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n\r\n        const lista = []\r\n        const listamenu = props.menu\r\n        listamenu.map((h) => {\r\n            const Complementos = h.Detalles\r\n            Complementos.map((deta) => {\r\n                const { text } = deta\r\n                lista.push(text)\r\n            })\r\n        })\r\n\r\n        const lista2 = lista.filter(function (elem, pos) {\r\n            return lista.indexOf(elem) == pos;\r\n        });\r\n\r\n        setDetallesDrop(lista2)\r\n    }, [])\r\n\r\n\r\n    const alertaSuccess = () => {\r\n        swal({\r\n            text: \"El Menu se modifico exitosamente\",\r\n            icon: \"success\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    //<progress value={progress} max=\"100\" />\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removedArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const handleModificarFotos = (event) => {\r\n        event.preventDefault()\r\n        var element\r\n        var index\r\n        for (index = 0; index < url.length; index++) {\r\n            element = url[index];\r\n            if (element === event.target.id) {\r\n                break\r\n            }\r\n        }\r\n\r\n        let deleteRef\r\n        deleteRef = storage.refFromURL(element)\r\n        deleteRef.delete()\r\n\r\n        const temp = [...url];\r\n        temp.splice(index, 1);\r\n        setUrl(temp);\r\n    }\r\n\r\n    const agregarDelDrop = (e) => {\r\n        const t = { id: Math.floor(Math.random() * 10000), text: e.target.name }\r\n        addTodo(t)\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(prevOpen => !prevOpen)\r\n    }\r\n\r\n    const habitacionVisible = (e) => {\r\n        if (e.target.value === \"Si\") {\r\n            setVisible(false)\r\n        } else {\r\n            setVisible(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\r\n                    : <div>\r\n                        <div className=\"grid min-h-screen place-items-center\">\r\n                            <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\r\n                                <h1 className=\"text-xl font-semibold text-center\">Modifique la información sobre el Menu</h1>\r\n                                <form onSubmit={handleUpload} className=\"mt-6\">\r\n\r\n                                    <label class=\"block\">\r\n                                        <span class=\"text-gray-700\">Ocultar Menu</span>\r\n                                        <select onChange={habitacionVisible} class=\"form-select block w-full mt-1 bg-gray-200\">\r\n                                            <>\r\n                                                {tempVisible ?\r\n                                                    <>\r\n                                                        <option>No</option>\r\n                                                        <option>Si</option>\r\n                                                    </> :\r\n                                                    <>\r\n                                                        <option>Si</option>\r\n                                                        <option>No</option>\r\n                                                    </>\r\n                                                }\r\n                                            </>\r\n                                        </select>\r\n                                    </label>\r\n\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre del Menu</label>\r\n                                    <input value={nombre} onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" disabled required />\r\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\r\n\r\n                                    <div class=\"relative group inline-block\">\r\n                                        <div onClick={handleOpen} class=\"inline-flex justify-center w-full rounded-md shadow-sm px-40 py-2 bg-blue-900 text-sm font-medium text-white my-2\">\r\n                                            Detalles Pasados\r\n                                            <svg class=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                                <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                            </svg>\r\n                                        </div>\r\n\r\n                                        <div class={open ? (\"px-40 py-1 w-full absolute rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\") : \"hidden\"}>\r\n                                            {\r\n                                                detallesDrop.map((text) => {\r\n                                                    return (\r\n                                                        <a onClick={agregarDelDrop} name={text} class=\"block px-12 flex text-sm text-black border-b-2 border-transparent hover:border-blue-800\">{text}</a>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Form onSubmit={addTodo} />\r\n                                    <Items\r\n                                        todos={todos}\r\n                                        completeTodo={completeTodo}\r\n                                        removeTodo={removeTodo}\r\n                                        updateTodo={updateTodo}\r\n                                    />\r\n\r\n                                    <div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\r\n                                        <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Fotos</h2>\r\n                                        <div className=\"grid grid-cols-2 place-items-center\">\r\n                                            {\r\n                                                url.map(foto => {\r\n                                                    return (\r\n                                                        <div>\r\n                                                            <div class=\"relative bg-gray-300 rounded-2xl m-auto py-2 px-2\">\r\n                                                                <button className=\"absolute top-0 right-0\" onClick={handleModificarFotos}>\r\n                                                                    <svg class=\"fill-current text-red-500 h-8 w-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                                                        <path id={foto} fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\r\n                                                                    </svg>\r\n                                                                </button>\r\n                                                                <img\r\n                                                                    className=\"h-40 w-40 object-cover rounded-xl\"\r\n                                                                    alt=\"Habitacion\"\r\n                                                                    src={foto}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"py-6\">\r\n                                        <section className=\"container\">\r\n                                            <div {...getRootProps({ className: 'dropzone', style })}>\r\n                                                <input {...getInputProps()} />\r\n                                                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                            </div>\r\n                                            <aside style={thumbsContainer}>\r\n                                                {thumbs}\r\n                                            </aside>\r\n                                        </section>\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Modificar Menu</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModificarMenu\r\n","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\AgregarMenu.js",["250","251","252","253","254","255","256","257","258","259","260","261","262","263"],"import React, { useState, useMemo, useEffect } from 'react'\r\nimport { db } from '../../firebase'\r\nimport swal from 'sweetalert'\r\nimport { storage } from '../../firebase';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Items from '../AgregarItems/Items'\r\nimport Form from '../AgregarItems/Form'\r\nimport { TiMediaPlayOutline } from 'react-icons/ti';\r\nimport Loading from './Loading'\r\n\r\nfunction AgregarMenu(props) {\r\n\r\n    const [Nombre, setNombre] = useState(\"\");\r\n    const [files, setFiles] = useState([]);\r\n    const [Url, setUrl] = useState([]);\r\n    const [progress, setProgress] = useState(0);\r\n    const [todos, setTodos] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [detallesDrop, setDetallesDrop] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [visible, setVisible] = useState(true);\r\n    const [num, setNum] = useState(0);\r\n\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    })\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n    const thumbsContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 16\r\n    };\r\n\r\n    const thumb = {\r\n        display: 'inline-flex',\r\n        borderRadius: 2,\r\n        border: '1px solid #eaeaea',\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: 100,\r\n        height: 100,\r\n        padding: 4,\r\n        boxSizing: 'border-box'\r\n    };\r\n\r\n    const thumbInner = {\r\n        display: 'flex',\r\n        minWidth: 0,\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const img = {\r\n        display: 'block',\r\n        width: 'auto',\r\n        height: '100%'\r\n    };\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    const alertaSuccess = () => {\r\n        swal({\r\n            text: \"El Menu \" + Nombre + \" fue agregado exitosamente\",\r\n            icon: \"success\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const alertaFail = () => {\r\n        swal({\r\n            text: \"El Menu \" + Nombre + \" no se pudo agregar\",\r\n            icon: \"error\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const alertaFotos = () => {\r\n        swal({\r\n            text: \"El Menu\" + Nombre + \" no tiene imagenes\",\r\n            icon: \"error\",\r\n            button: \"Aceptar\"\r\n        });\r\n    }\r\n\r\n    const handleUpload = async (event) => {\r\n        event.preventDefault()\r\n        let dirFotos = [];\r\n        let uploadTask = null;\r\n        if (files.length !== 0) {\r\n            setShowModal(prev => !prev);\r\n            for (var i = 0; i < files.length; i++) {\r\n                const nombreFoto = files[i].name;\r\n                uploadTask = await storage.ref(`menu/${nombreFoto}`).put(files[i]);\r\n\r\n                let Links = await storage\r\n                    .ref(\"menu\")\r\n                    .child(nombreFoto)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        dirFotos.push(url)\r\n                    });\r\n            }\r\n\r\n            db.collection(\"Menu\").doc(Nombre).set({\r\n                Nombre: Nombre,\r\n                Detalles: todos,\r\n                Url: dirFotos,\r\n                Visible: visible\r\n            }).then(() => {\r\n                setShowModal(prev => !prev);\r\n                alertaSuccess()\r\n                setNum(prevNum => prevNum - 1)\r\n                props.mostrarInicial()\r\n            }).catch(() => {\r\n                setShowModal(prev => !prev);\r\n                alertaFail()\r\n            })\r\n        } else {\r\n            alertaFotos()\r\n        }\r\n    };\r\n    //<progress value={progress} max=\"100\" />\r\n\r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img\r\n                    alt=\"\"\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    useEffect(() => {\r\n        if (num === 0) {\r\n            const lista = []\r\n            const ListaServicios = props.menu\r\n            ListaServicios.map((h) => {\r\n                const Complementos = h.Detalles\r\n                Complementos.map((deta) => {\r\n                    const { text } = deta\r\n                    lista.push(text)\r\n                })\r\n            })\r\n\r\n            const lista2 = lista.filter(function (elem, pos) {\r\n                return lista.indexOf(elem) == pos;\r\n            });\r\n\r\n            setDetallesDrop(lista2)\r\n            setNum(prevNum => prevNum + 1)\r\n        }\r\n    }, []);\r\n\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removedArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(prevOpen => !prevOpen)\r\n    }\r\n\r\n    const agregarDelDrop = (e) => {\r\n        console.log(e.target.name)\r\n        const t = { id: Math.floor(Math.random() * 10000), text: e.target.name }\r\n        addTodo(t)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\r\n                    : <div className=\"grid min-h-screen place-items-center\">\r\n                        <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\r\n                            <h1 className=\"text-xl font-semibold text-center\">Ingrese información sobre el Menu</h1>\r\n                            <form onSubmit={handleUpload} className=\"mt-6\">\r\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre del Menu</label>\r\n                                <input onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\r\n\r\n                                <div class=\"relative group inline-block\">\r\n                                    <div onClick={handleOpen} class=\"inline-flex justify-center w-full rounded-md shadow-sm px-40 py-2 bg-blue-900 text-sm font-medium text-white my-2\">\r\n                                        Detalles Pasados\r\n                                            <svg class=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                        </svg>\r\n                                    </div>\r\n\r\n                                    <div class={open ? (\"px-40 py-1 w-full absolute rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\") : \"hidden\"}>\r\n                                        {\r\n                                            detallesDrop.map((text) => {\r\n                                                return (\r\n                                                    <a onClick={agregarDelDrop} name={text} class=\"block px-12 flex text-sm text-black border-b-2 border-transparent hover:border-blue-800\">{text}</a>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <Form onSubmit={addTodo} />\r\n                                <Items\r\n                                    todos={todos}\r\n                                    completeTodo={completeTodo}\r\n                                    removeTodo={removeTodo}\r\n                                    updateTodo={updateTodo}\r\n                                />\r\n\r\n                                <div class=\"py-6\">\r\n                                    <section className=\"container\">\r\n                                        <div {...getRootProps({ className: 'dropzone', style })}>\r\n                                            <input {...getInputProps()} />\r\n                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                        </div>\r\n                                        <aside style={thumbsContainer}>\r\n                                            {thumbs}\r\n                                        </aside>\r\n                                    </section>\r\n                                </div>\r\n                                <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Agregar Menu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AgregarMenu","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\Administración\\Loading.js",["264"],"import React, { useState } from 'react'\r\n\r\n\r\nfunction Loading({ showModal }) {\r\n\r\n    return (\r\n        <>\r\n            {showModal ? (\r\n                <div className=\"min-w-screen min-h-screen flex items-center justify-center\">\r\n                    <div class=\"w-40 h-12 inline-flex items-center px-4 py-2 border border-transparent text-base leading-6 font-medium rounded-md text-black bg-gray-300 active:bg-gray-300 transition ease-in-out duration-150\">\r\n                        <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-black\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                        </svg>\r\n                    Procesando\r\n                </div>\r\n                </div>\r\n            ) : null}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading","C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\AgregarItems\\Items.js",[],"C:\\Users\\User\\Desktop\\Aplicacion-Hotel\\src\\Components\\AgregarItems\\Form.js",["265","266"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction Form(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <div>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n          />\r\n          <button onClick={handleSubmit} class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-red-500 shadow-lg focus:outline-none hover:bg-red-700 hover:shadow-none\">\r\n            Actualizar\r\n          </button>\r\n        </div>\r\n      ) : (\r\n          <div>\r\n            <input\r\n              placeholder='detalle'\r\n              value={input}\r\n              onChange={handleChange}\r\n              name='text'\r\n              className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n            />\r\n            <button onClick={handleSubmit} class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">\r\n              Agregar\r\n          </button>\r\n          <div class=\"py-2\"/>\r\n          </div>\r\n        )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n",{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":12,"column":10,"nodeType":"273","messageId":"274","endLine":12,"endColumn":22},{"ruleId":"271","severity":1,"message":"275","line":13,"column":8,"nodeType":"273","messageId":"274","endLine":13,"endColumn":20},{"ruleId":"271","severity":1,"message":"276","line":17,"column":20,"nodeType":"273","messageId":"274","endLine":17,"endColumn":29},{"ruleId":"277","severity":1,"message":"278","line":27,"column":46,"nodeType":"279","messageId":"280","endLine":27,"endColumn":48},{"ruleId":"281","severity":1,"message":"282","line":42,"column":6,"nodeType":"283","endLine":42,"endColumn":8,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":19,"column":1,"nodeType":"287","messageId":"288","endLine":19,"endColumn":30},{"ruleId":"285","severity":1,"message":"289","line":91,"column":17,"nodeType":"287","messageId":"290","endLine":91,"endColumn":52},{"ruleId":"271","severity":1,"message":"291","line":30,"column":25,"nodeType":"273","messageId":"274","endLine":30,"endColumn":31},{"ruleId":"271","severity":1,"message":"292","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":18},{"ruleId":"271","severity":1,"message":"293","line":4,"column":20,"nodeType":"273","messageId":"274","endLine":4,"endColumn":25},{"ruleId":"271","severity":1,"message":"294","line":25,"column":12,"nodeType":"273","messageId":"274","endLine":25,"endColumn":26},{"ruleId":"281","severity":1,"message":"295","line":62,"column":8,"nodeType":"283","endLine":62,"endColumn":10,"suggestions":"296"},{"ruleId":"271","severity":1,"message":"297","line":2,"column":14,"nodeType":"273","messageId":"274","endLine":2,"endColumn":21},{"ruleId":"271","severity":1,"message":"298","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":19},{"ruleId":"277","severity":1,"message":"299","line":29,"column":23,"nodeType":"279","messageId":"300","endLine":29,"endColumn":25},{"ruleId":"281","severity":1,"message":"301","line":53,"column":8,"nodeType":"283","endLine":53,"endColumn":10,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":70,"column":184,"nodeType":"305","endLine":70,"endColumn":198},{"ruleId":"271","severity":1,"message":"306","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":28},{"ruleId":"271","severity":1,"message":"307","line":16,"column":12,"nodeType":"273","messageId":"274","endLine":16,"endColumn":15},{"ruleId":"271","severity":1,"message":"308","line":16,"column":17,"nodeType":"273","messageId":"274","endLine":16,"endColumn":23},{"ruleId":"271","severity":1,"message":"309","line":17,"column":12,"nodeType":"273","messageId":"274","endLine":17,"endColumn":20},{"ruleId":"271","severity":1,"message":"310","line":17,"column":22,"nodeType":"273","messageId":"274","endLine":17,"endColumn":33},{"ruleId":"271","severity":1,"message":"311","line":22,"column":21,"nodeType":"273","messageId":"274","endLine":22,"endColumn":31},{"ruleId":"281","severity":1,"message":"312","line":105,"column":9,"nodeType":"283","endLine":109,"endColumn":6,"suggestions":"313"},{"ruleId":"271","severity":1,"message":"314","line":143,"column":17,"nodeType":"273","messageId":"274","endLine":143,"endColumn":27},{"ruleId":"271","severity":1,"message":"315","line":145,"column":21,"nodeType":"273","messageId":"274","endLine":145,"endColumn":26},{"ruleId":"277","severity":1,"message":"299","line":191,"column":36,"nodeType":"279","messageId":"300","endLine":191,"endColumn":38},{"ruleId":"277","severity":1,"message":"299","line":193,"column":41,"nodeType":"279","messageId":"300","endLine":193,"endColumn":43},{"ruleId":"316","severity":1,"message":"317","line":200,"column":44,"nodeType":"318","messageId":"319","endLine":200,"endColumn":46},{"ruleId":"281","severity":1,"message":"320","line":206,"column":8,"nodeType":"283","endLine":206,"endColumn":10,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":280,"column":53,"nodeType":"324","endLine":280,"endColumn":189},{"ruleId":"281","severity":1,"message":"312","line":103,"column":9,"nodeType":"283","endLine":107,"endColumn":6,"suggestions":"325"},{"ruleId":"277","severity":1,"message":"299","line":142,"column":35,"nodeType":"279","messageId":"300","endLine":142,"endColumn":37},{"ruleId":"277","severity":1,"message":"299","line":144,"column":37,"nodeType":"279","messageId":"300","endLine":144,"endColumn":39},{"ruleId":"316","severity":1,"message":"317","line":151,"column":40,"nodeType":"318","messageId":"319","endLine":151,"endColumn":42},{"ruleId":"281","severity":1,"message":"326","line":155,"column":8,"nodeType":"283","endLine":155,"endColumn":10,"suggestions":"327"},{"ruleId":"277","severity":1,"message":"299","line":226,"column":20,"nodeType":"279","messageId":"300","endLine":226,"endColumn":22},{"ruleId":"271","severity":1,"message":"314","line":233,"column":17,"nodeType":"273","messageId":"274","endLine":233,"endColumn":27},{"ruleId":"271","severity":1,"message":"315","line":235,"column":21,"nodeType":"273","messageId":"274","endLine":235,"endColumn":26},{"ruleId":"322","severity":1,"message":"323","line":325,"column":57,"nodeType":"324","endLine":325,"endColumn":193},{"ruleId":"281","severity":1,"message":"312","line":102,"column":9,"nodeType":"283","endLine":106,"endColumn":6,"suggestions":"328"},{"ruleId":"277","severity":1,"message":"299","line":126,"column":20,"nodeType":"279","messageId":"300","endLine":126,"endColumn":22},{"ruleId":"271","severity":1,"message":"314","line":133,"column":17,"nodeType":"273","messageId":"274","endLine":133,"endColumn":27},{"ruleId":"271","severity":1,"message":"315","line":135,"column":21,"nodeType":"273","messageId":"274","endLine":135,"endColumn":26},{"ruleId":"277","severity":1,"message":"299","line":180,"column":32,"nodeType":"279","messageId":"300","endLine":180,"endColumn":34},{"ruleId":"277","severity":1,"message":"299","line":182,"column":37,"nodeType":"279","messageId":"300","endLine":182,"endColumn":39},{"ruleId":"316","severity":1,"message":"317","line":189,"column":40,"nodeType":"318","messageId":"319","endLine":189,"endColumn":42},{"ruleId":"281","severity":1,"message":"329","line":193,"column":8,"nodeType":"283","endLine":193,"endColumn":10,"suggestions":"330"},{"ruleId":"322","severity":1,"message":"323","line":323,"column":57,"nodeType":"324","endLine":323,"endColumn":193},{"ruleId":"271","severity":1,"message":"306","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":28},{"ruleId":"271","severity":1,"message":"307","line":16,"column":12,"nodeType":"273","messageId":"274","endLine":16,"endColumn":15},{"ruleId":"271","severity":1,"message":"308","line":16,"column":17,"nodeType":"273","messageId":"274","endLine":16,"endColumn":23},{"ruleId":"271","severity":1,"message":"311","line":25,"column":21,"nodeType":"273","messageId":"274","endLine":25,"endColumn":31},{"ruleId":"281","severity":1,"message":"312","line":109,"column":9,"nodeType":"283","endLine":113,"endColumn":6,"suggestions":"331"},{"ruleId":"271","severity":1,"message":"314","line":147,"column":17,"nodeType":"273","messageId":"274","endLine":147,"endColumn":27},{"ruleId":"271","severity":1,"message":"315","line":149,"column":21,"nodeType":"273","messageId":"274","endLine":149,"endColumn":26},{"ruleId":"281","severity":1,"message":"332","line":192,"column":5,"nodeType":"273","endLine":192,"endColumn":14,"suggestions":"333"},{"ruleId":"277","severity":1,"message":"299","line":196,"column":39,"nodeType":"279","messageId":"300","endLine":196,"endColumn":41},{"ruleId":"277","severity":1,"message":"299","line":198,"column":41,"nodeType":"279","messageId":"300","endLine":198,"endColumn":43},{"ruleId":"316","severity":1,"message":"317","line":205,"column":44,"nodeType":"318","messageId":"319","endLine":205,"endColumn":46},{"ruleId":"322","severity":1,"message":"323","line":283,"column":57,"nodeType":"324","endLine":283,"endColumn":193},{"ruleId":"281","severity":1,"message":"312","line":101,"column":9,"nodeType":"283","endLine":105,"endColumn":6,"suggestions":"334"},{"ruleId":"277","severity":1,"message":"299","line":125,"column":20,"nodeType":"279","messageId":"300","endLine":125,"endColumn":22},{"ruleId":"271","severity":1,"message":"314","line":132,"column":17,"nodeType":"273","messageId":"274","endLine":132,"endColumn":27},{"ruleId":"271","severity":1,"message":"315","line":134,"column":21,"nodeType":"273","messageId":"274","endLine":134,"endColumn":26},{"ruleId":"277","severity":1,"message":"299","line":177,"column":27,"nodeType":"279","messageId":"300","endLine":177,"endColumn":29},{"ruleId":"277","severity":1,"message":"299","line":179,"column":37,"nodeType":"279","messageId":"300","endLine":179,"endColumn":39},{"ruleId":"316","severity":1,"message":"317","line":186,"column":40,"nodeType":"318","messageId":"319","endLine":186,"endColumn":42},{"ruleId":"281","severity":1,"message":"335","line":190,"column":8,"nodeType":"283","endLine":190,"endColumn":10,"suggestions":"336"},{"ruleId":"322","severity":1,"message":"323","line":318,"column":57,"nodeType":"324","endLine":318,"endColumn":193},{"ruleId":"271","severity":1,"message":"306","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":28},{"ruleId":"271","severity":1,"message":"307","line":15,"column":12,"nodeType":"273","messageId":"274","endLine":15,"endColumn":15},{"ruleId":"271","severity":1,"message":"308","line":15,"column":17,"nodeType":"273","messageId":"274","endLine":15,"endColumn":23},{"ruleId":"271","severity":1,"message":"309","line":16,"column":12,"nodeType":"273","messageId":"274","endLine":16,"endColumn":20},{"ruleId":"271","severity":1,"message":"310","line":16,"column":22,"nodeType":"273","messageId":"274","endLine":16,"endColumn":33},{"ruleId":"271","severity":1,"message":"311","line":21,"column":21,"nodeType":"273","messageId":"274","endLine":21,"endColumn":31},{"ruleId":"281","severity":1,"message":"312","line":103,"column":9,"nodeType":"283","endLine":107,"endColumn":6,"suggestions":"337"},{"ruleId":"271","severity":1,"message":"314","line":141,"column":17,"nodeType":"273","messageId":"274","endLine":141,"endColumn":27},{"ruleId":"271","severity":1,"message":"315","line":143,"column":21,"nodeType":"273","messageId":"274","endLine":143,"endColumn":26},{"ruleId":"277","severity":1,"message":"299","line":188,"column":36,"nodeType":"279","messageId":"300","endLine":188,"endColumn":38},{"ruleId":"277","severity":1,"message":"299","line":190,"column":41,"nodeType":"279","messageId":"300","endLine":190,"endColumn":43},{"ruleId":"316","severity":1,"message":"317","line":197,"column":44,"nodeType":"318","messageId":"319","endLine":197,"endColumn":46},{"ruleId":"281","severity":1,"message":"338","line":203,"column":8,"nodeType":"283","endLine":203,"endColumn":10,"suggestions":"339"},{"ruleId":"322","severity":1,"message":"323","line":274,"column":53,"nodeType":"324","endLine":274,"endColumn":189},{"ruleId":"271","severity":1,"message":"340","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"341","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"271","severity":1,"message":"342","line":1,"column":38,"nodeType":"273","messageId":"274","endLine":1,"endColumn":44},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used.","'setClosed' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getReservas' and 'getReseñas'. Either include them or remove the dependency array.","ArrayExpression",["345"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Nested block is redundant.","redundantNestedBlock","'nombre' is assigned a value but never used.","'Calendar' is defined but never used.","'utils' is defined but never used.","'diasReservados' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getClientes'. Either include it or remove the dependency array.",["346"],"'storage' is defined but never used.","'PreviousMap' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'props.reseña'. Either include it or remove the dependency array. If 'setCheck' needs the current value of 'props.reseña', you can also switch to useReducer instead of useState and read 'props.reseña' in the reducer.",["347"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TiMediaPlayOutline' is defined but never used.","'Url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'setVisible' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'acceptStyle', 'activeStyle', 'baseStyle', and 'rejectStyle'. Either include them or remove the dependency array.",["348"],"'uploadTask' is assigned a value but never used.","'Links' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'num' and 'props.servicios'. Either include them or remove the dependency array.",["349"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["350"],"React Hook useEffect has missing dependencies: 'props.habitaciones' and 'props.nombre'. Either include them or remove the dependency array. If 'setNombre' needs the current value of 'props.nombre', you can also switch to useReducer instead of useState and read 'props.nombre' in the reducer.",["351"],["352"],"React Hook useEffect has missing dependencies: 'props.nombre' and 'props.servicios'. Either include them or remove the dependency array. If 'setNombre' needs the current value of 'props.nombre', you can also switch to useReducer instead of useState and read 'props.nombre' in the reducer.",["353"],["354"],"React Hook useEffect contains a call to 'setDetallesDrop'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [num, props.habitaciones] as a second argument to the useEffect Hook.",["355"],["356"],"React Hook useEffect has missing dependencies: 'props.menu' and 'props.nombre'. Either include them or remove the dependency array. If 'setNombre' needs the current value of 'props.nombre', you can also switch to useReducer instead of useState and read 'props.nombre' in the reducer.",["357"],["358"],"React Hook useEffect has missing dependencies: 'num' and 'props.menu'. Either include them or remove the dependency array.",["359"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"366","fix":"370"},{"desc":"371","fix":"372"},{"desc":"366","fix":"373"},{"desc":"374","fix":"375"},{"desc":"366","fix":"376"},{"desc":"377","fix":"378"},{"desc":"366","fix":"379"},{"desc":"380","fix":"381"},{"desc":"366","fix":"382"},{"desc":"383","fix":"384"},"Update the dependencies array to be: [getReservas, getReseñas]",{"range":"385","text":"386"},"Update the dependencies array to be: [getClientes]",{"range":"387","text":"388"},"Update the dependencies array to be: [props.reseña]",{"range":"389","text":"390"},"Update the dependencies array to be: [baseStyle, isDragActive, activeStyle, isDragAccept, acceptStyle, isDragReject, rejectStyle]",{"range":"391","text":"392"},"Update the dependencies array to be: [num, props.servicios]",{"range":"393","text":"394"},{"range":"395","text":"392"},"Update the dependencies array to be: [props.habitaciones, props.nombre]",{"range":"396","text":"397"},{"range":"398","text":"392"},"Update the dependencies array to be: [props.nombre, props.servicios]",{"range":"399","text":"400"},{"range":"401","text":"392"},"Add dependencies array: [num, props.habitaciones]",{"range":"402","text":"403"},{"range":"404","text":"392"},"Update the dependencies array to be: [props.menu, props.nombre]",{"range":"405","text":"406"},{"range":"407","text":"392"},"Update the dependencies array to be: [num, props.menu]",{"range":"408","text":"409"},[1403,1405],"[getReservas, getReseñas]",[2453,2455],"[getClientes]",[1628,1630],"[props.reseña]",[2845,2921],"[baseStyle, isDragActive, activeStyle, isDragAccept, acceptStyle, isDragReject, rejectStyle]",[5810,5812],"[num, props.servicios]",[2807,2883],[4436,4438],"[props.habitaciones, props.nombre]",[2748,2824],[5446,5448],"[props.nombre, props.servicios]",[2956,3032],[5982,5982],", [num, props.habitaciones]",[2696,2772],[5280,5282],"[props.menu, props.nombre]",[2791,2867],[5692,5694],"[num, props.menu]"]