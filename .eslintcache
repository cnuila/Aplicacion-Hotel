[{"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/index.js":"1","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/reportWebVitals.js":"2","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/App.js":"3","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/admin_menu.js":"4","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/ListarUsuario.js":"5","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Servicios.js":"6","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/MisReservas.js":"7","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/InformacionHabitacion.js":"8","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/MenuRestaurante.js":"9","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/RestaurantePrincipal.js":"10","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Habitaciones.js":"11","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/LandingPage.js":"12","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/LogIn/LogIn.js":"13","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/LogIn/SignIn.js":"14","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Rutas Privadas/Auth.js":"15","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Rutas Privadas/RutaPrivada.js":"16","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/LogIn/RecuperarContra.js":"17","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Reseña.js":"18","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/CrearReseña.js":"19","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Platillo.js":"20","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/firebase.js":"21","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Navbar.js":"22","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ListaServicios.js":"23","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ListaHabitaciones.js":"24","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ListaClientes.js":"25","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ListaMenu.js":"26","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Habitacion.js":"27","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/AgregarServicios.js":"28","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Dropdown.js":"29","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/AgregarHabitaciones.js":"30","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ModificarHabitacion.js":"31","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/AgregarMenu.js":"32","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ModificarMenu.js":"33","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ModificarServicios.js":"34","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/Loading.js":"35","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/AgregarItems/Form.js":"36","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/AgregarItems/Items.js":"37"},{"size":542,"mtime":1608133038738,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1606258736909,"results":"40","hashOfConfig":"39"},{"size":1703,"mtime":1614276958012,"results":"41","hashOfConfig":"39"},{"size":2797,"mtime":1614184828162,"results":"42","hashOfConfig":"39"},{"size":7784,"mtime":1613773376333,"results":"43","hashOfConfig":"39"},{"size":2864,"mtime":1613062182041,"results":"44","hashOfConfig":"39"},{"size":4989,"mtime":1614415529335,"results":"45","hashOfConfig":"39"},{"size":7955,"mtime":1614413816189,"results":"46","hashOfConfig":"39"},{"size":1210,"mtime":1614398639614,"results":"47","hashOfConfig":"39"},{"size":3755,"mtime":1613225434865,"results":"48","hashOfConfig":"39"},{"size":1582,"mtime":1614105892423,"results":"49","hashOfConfig":"39"},{"size":10602,"mtime":1612878926924,"results":"50","hashOfConfig":"39"},{"size":6999,"mtime":1613193572271,"results":"51","hashOfConfig":"39"},{"size":9776,"mtime":1613773177084,"results":"52","hashOfConfig":"39"},{"size":589,"mtime":1613225434865,"results":"53","hashOfConfig":"39"},{"size":595,"mtime":1606933804212,"results":"54","hashOfConfig":"39"},{"size":2534,"mtime":1608488308842,"results":"55","hashOfConfig":"39"},{"size":5979,"mtime":1614398639646,"results":"56","hashOfConfig":"39"},{"size":5093,"mtime":1614398639606,"results":"57","hashOfConfig":"39"},{"size":2168,"mtime":1614398639646,"results":"58","hashOfConfig":"39"},{"size":655,"mtime":1608133856484,"results":"59","hashOfConfig":"39"},{"size":2643,"mtime":1614282841915,"results":"60","hashOfConfig":"39"},{"size":9689,"mtime":1614274302941,"results":"61","hashOfConfig":"39"},{"size":13525,"mtime":1614276129459,"results":"62","hashOfConfig":"39"},{"size":5318,"mtime":1613192953201,"results":"63","hashOfConfig":"39"},{"size":9540,"mtime":1614274302941,"results":"64","hashOfConfig":"39"},{"size":3709,"mtime":1614107545508,"results":"65","hashOfConfig":"39"},{"size":8574,"mtime":1614398639574,"results":"66","hashOfConfig":"39"},{"size":4564,"mtime":1614282666350,"results":"67","hashOfConfig":"39"},{"size":8811,"mtime":1614184828158,"results":"68","hashOfConfig":"39"},{"size":11462,"mtime":1614184828162,"results":"69","hashOfConfig":"39"},{"size":8524,"mtime":1614184828158,"results":"70","hashOfConfig":"39"},{"size":11430,"mtime":1614184828162,"results":"71","hashOfConfig":"39"},{"size":11476,"mtime":1614184828162,"results":"72","hashOfConfig":"39"},{"size":1107,"mtime":1614184828162,"results":"73","hashOfConfig":"39"},{"size":1701,"mtime":1612878926844,"results":"74","hashOfConfig":"39"},{"size":1234,"mtime":1612681951182,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1ox4tue",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/index.js",[],["167","168"],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/reportWebVitals.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/App.js",["169","170"],"import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LogIn from './Components/LogIn/LogIn'\nimport SignIn from './Components/LogIn/SignIn'\nimport Administracion from './Components/admin_menu'\nimport LandingPage from \"./Components/LandingPage\"\nimport ListarUsuario from \"./Components/ListarUsuario\"\nimport RecuperarContraseña from './Components/LogIn/RecuperarContra'\nimport Servicos from './Components/Servicios'\nimport Habitaciones from './Components/Habitaciones'\nimport Restaurante from './Components/RestaurantePrincipal'\nimport MisReservas from './Components/MisReservas'\nimport { AuthProvider } from './Components/Rutas Privadas/Auth';\nimport PrivateRoute from \"./Components/Rutas Privadas/RutaPrivada\"\nimport InfoHabitacion from \"./Components/InformacionHabitacion\"\nimport Menu from \"./Components/MenuRestaurante\"\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/signup\" component={SignIn} />\n        <Route path=\"/login\" component={LogIn} />\n        <Route path=\"/administracion\" component={Administracion} />\n        <Route path=\"/recuperarContra\" component={RecuperarContraseña} />\n        <Route path=\"/servicios\" component={Servicos} />\n        <Route path=\"/miInfo\" exact component={ListarUsuario} />\n        <Route path=\"/habitaciones\" exact component={Habitaciones} />\n        <Route path=\"/restaurante\" component={Restaurante} />\n        <Route path=\"/habitaciones/:nombre\" component={InfoHabitacion} />\n        <Route path=\"/menu\" component={Menu} />\n        <Route path=\"/misReservas\" component={MisReservas}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/admin_menu.js",["171"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useMediaQuery } from 'react-responsive'\nimport ListaClientes from './Administración/ListaClientes'\nimport ListaHabitaciones from './Administración/ListaHabitaciones'\nimport ListaServicios from './Administración/ListaServicios'\nimport ListaMenu from './Administración/ListaMenu'\nimport Navbar from './Navbar'\n\nconst AdminMenu = function () {\n  const [isClosed, setClosed] = React.useState(false)\n\n  const isStatic = useMediaQuery({\n    query: '(min-width: 640px)',\n  })\n\n  return (\n    <div>\n      <Navbar />\n      <Router>\n        <div className=\"flex bg-gray-100\">\n          {(isStatic || !isClosed) && (\n            <aside\n              aria-hidden={isClosed}\n              className=\"bg-white w-64 min-h-screen flex flex-col\"\n            >\n\n              <div className=\"bg-gray-300 border-r py-3 pl-1 flex-grow relative text-black font-semibold\">\n                <nav>\n                  <ul>\n                    <li className=\"p-3 hover:bg-gray-400\" >\n                      <Link to=\"/administracion/Clientes\" className=\"btn btn-primary\">Clientes</Link>\n                    </li>\n                    <li className=\"p-3 hover:bg-gray-400\">\n                      <Link to=\"/administracion/Habitaciones\" className=\"btn btn-primary\">Habitaciones</Link>\n                    </li>\n                    <li className=\"p-3 hover:bg-gray-400\">\n                      <Link to=\"/administracion/Restaurante\" className=\"btn btn-primary\">Restaurante</Link>\n                    </li>\n                    <li className=\"p-3 hover:bg-gray-400\">\n                      <Link to=\"/administracion/Servicios\" className=\"btn btn-primary\">Servicios</Link>\n                    </li>\n                  </ul>\n                </nav>\n\n              </div>\n            </aside>\n          )}\n\n          <main className=\"flex-grow flex flex-col min-h-screen\">\n\n            <Switch>\n              <Route path=\"/administracion/Clientes\">\n                <Clientes />\n              </Route>\n              <Route path=\"/administracion/Habitaciones\">\n                <Habitaciones />\n              </Route>\n              <Route path=\"/administracion/Restaurante\">\n                <Restaurante />\n              </Route>\n              <Route path=\"/administracion/Servicios\">\n                <Servicios />\n              </Route>\n            </Switch>\n          </main>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nfunction Clientes() {\n  return (\n    <ListaClientes />\n  )\n}\n\nfunction Restaurante() {\n  return (\n    <ListaMenu />\n  )\n}\n\nfunction Servicios() {\n  return (\n    <ListaServicios />\n  )\n}\n\nfunction Habitaciones() {\n  return (\n    <ListaHabitaciones />\n  )\n}\n\n\n\nexport default AdminMenu;\n\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/ListarUsuario.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Servicios.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/MisReservas.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/InformacionHabitacion.js",["172"],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/MenuRestaurante.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/RestaurantePrincipal.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Habitaciones.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/LandingPage.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/LogIn/LogIn.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/LogIn/SignIn.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Rutas Privadas/Auth.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Rutas Privadas/RutaPrivada.js",["173"],"import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"\nimport { AuthContext } from \"./Auth\"\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n    const { currentUser } = useContext(AuthContext);\n    return (\n        <Route {...rest}\n            render={routeProps =>\n                !!currentUser ? (\n                    <RouteComponent {...routeProps} />\n                ) : (\n                        <Redirect to={\"/\"} />\n                    )\n            }\n        />\n    );\n};\n{/* Cambiar el redirect to*/}\nexport default PrivateRoute","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/LogIn/RecuperarContra.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Reseña.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/CrearReseña.js",["174","175","176"],"import { Link } from 'react-router-dom';\nimport ReactStarRating from \"react-star-ratings-component\";\nimport React, { Component } from 'react'\nimport swal from 'sweetalert'\nimport { db, auth } from '../firebase'\n\nclass CrearReseña extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            ...this.estadoInicial,\n        }\n    }\n    estadoInicial = {\n        rating: 0,\n        comentario: '',\n    }\n\n    handlecomentario = (event) => {\n        this.setState({\n            comentario: event.target.value\n        })\n    }\n\n    onStarClick = (valor) => {\n        this.setState({\n            rating: valor,\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const user = auth.currentUser;\n        if (user) {\n            if (this.state.comentario.includes('puta') || this.state.comentario.includes('maldito') || this.state.comentario.includes('puta') || this.state.comentario.includes('cabron') || this.state.comentario.includes('pija') || this.state.comentario.includes('mierda')\n\n            ) {\n                swal({\n                    text: \"Su Comentario incluye palabras ofensivas\",\n                    icon: \"warning\",\n                    button: \"Aceptar\"\n                });\n            } else if (this.state.rating === 0) {\n                swal({\n                    text: \"Por favor indicar cuantas estrellas\",\n                    icon: \"warning\",\n                    button: \"Aceptar\"\n                });\n            } else if (this.state.comentario.length < 5) {\n                swal({\n                    text: \"Su comentario es muy corto\",\n                    icon: \"warning\",\n                    button: \"Aceptar\"\n                });\n            } else {\n                const resAn = db.collection(\"Habitaciones\").doc(this.props.nombre).collection(\"Reseñas\")\n                const email = user.email;\n                resAn.add({\n                    comentario: this.state.comentario,\n                    rating: this.state.rating,\n                    visualizar: true,\n                    usuario: email,\n                }).then(() => {\n                    swal({\n                        text: \"La reseña fue enviada exitosamente\",\n                        icon: \"success\",\n                        button: \"Aceptar\",\n                        \n                    })\n                    this.props.getReseñas()\n                    this.setState({\n                        rating:0,\n                        comentario:\"\",\n                    })        \n                    \n                }).catch((error) => {\n                    swal({\n                        text: error,\n                        icon: \"warning\",\n                        button: \"Aceptar\"\n                    });\n                })\n                \n            }\n        } else {\n            swal({\n                text: \"Debes iniciar sesión para hacer una reseña\",\n                icon: \"warning\",\n                button: \"Aceptar\"\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div >\n                <div class=\"flex justify-center\">\n                    <div class=\"flex justify-center shadow-lg py-4 mx-8 mb-1 \">\n                        <form class=\"w-full max-w-xl justify-center  bg-gray-200 rounded-lg px-4 pt-1 border-gray-600 border-1\">\n                            <div class=\"flex flex-wrap justify-center -mx-3 mb-10\">\n                                <h2 class=\"px-4 -pt-1 pb-2 text-blue text-lg\">Tu opinión es importante</h2>\n                                <ReactStarRating\n                                    numberOfStar={5} numberOfSelectedStar={this.state.rating} colorFilledStar=\"yellow\"\n                                    colorEmptyStar=\"blue\" starSize=\"20px\" spaceBetweenStar=\"8px\"\n                                    disableOnSelect={false}\n                                    onSelectStar={(val) => this.onStarClick(val)}\n                                    />\n                                <div class=\"w-full md:w-full px-3 mb-2 mt-2\">\n                                    <textarea name=\"comentario\" onChange={this.handlecomentario} value={this.state.comentario} class=\"bg-gray-100 rounded border  border-gray-400 leading-normal resize-none w-full h-20 py-2 px-3 font-medium placeholder-gray-700 focus:outline-none focus:bg-white\" name=\"body\" placeholder='Danos tu Opinión' required></textarea>\n                                </div>\n                                <div class=\"w-full justify-center flex items-start md:w-full px-3\">\n                                    <input type='submit' onClick={this.handleSubmit} class=\"bg-gray-300  text-gray-900 font-medium py-1 px-4 border-2 border-gray-700 rounded-lg tracking-wide mr-1 hover:bg-gray-400\" value='Sube tu comentario' />\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                {/* inicio de comentarios anteriorires*/}\n            </div>\n\n\n\n        )\n    }\n}\nexport default CrearReseña;","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Platillo.js",["177"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { storage } from '../firebase';\n\nexport default function Platillo(props) {\n    const [fotos, setFotos] = useState([])\n    useEffect(() => {\n        async function descargarFotos() {\n            let arreglofotos = []\n            for (let i = 0; i < props.url.length; i++) {\n                let storageRef = storage.refFromURL(props.url[i])\n                await storageRef.getDownloadURL().then(direc => {\n                    arreglofotos.push(direc)\n                }).catch((error) => {\n                    console.log(\"ERROR: \" + error)\n                })\n            }\n            setFotos(arreglofotos)\n        }\n        descargarFotos()\n    }, [props.url])\n    return (\n        <div class=\"bg-gray-800\">\n            <div class=\" sm:w-3/4 md:w-3/4 container  lg:w-1/3 mx-auto flex flex-col  pb-2\">\n                <div v-for=\"card in cards\" class=\" flex flex-row md:flex-row overflow-hidden bg-white rounded-lg shadow-xl  mt-4 w-100 mx-2\">\n                    <div class=\"object-cover w-auto h-5/6\">\n                        <img src={fotos[0]} alt=\"foto\" className=\"object-contain h-48 w-full content-center rounded-lg bg-gray-100\" />\n                    </div>\n                    <div class=\"pl-8 w-full py-4 px-6 text-gray-800 flex flex-col justify-between\">\n                        <h3 class=\"font-semibold text-lg leading-tight truncate\">{props.nombre}</h3>{/* Nombre*/}\n                        <p class=\"mt-2\">\n                            Detalles\n                    {props.detalles.map(d => {\n                            return (\n                                <div>\n                                    <li>{d.text}</li>\n                                </div>\n                            )\n                        })}\n                        </p>\n                        <p className=\"text-md text-gray-700 uppercase tracking-wide font-semibold mt-2\">\n                            {/** precio */}\n                    Lps.{props.precio}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/firebase.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Navbar.js",["178"],"import React, { Component } from 'react';\nimport firebase from 'firebase'\nimport { Link } from 'react-router-dom';\nimport menuIcon from '../assets/Hamburger_icon.png'\nimport Dropdown from \"./Dropdown\";\nimport { auth } from '../firebase';\n\nclass Navbar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            nombre: 'Perfil'\n        }\n    }\n\n    cambiarNombre = (newName) => {\n        this.setState({\n            nombre: newName\n        })\n    }\n\n    cambioDeEstado = () => {\n        auth.onAuthStateChanged(function (user) {\n            if (user) {\n                this.cambiarNombre(user.displayName)\n            } else {\n                this.cambiarNombre('Perfil')\n            }\n        });\n    }\n    render() {\n        return (\n            <>\n                <header class=\"lg:px-16 px-6 bg-blue-900 flex flex-wrap items-center lg:py-0 py-2 text-white\">\n                    <div class=\"flex-1 flex justify-between items-center\">\n                        <Link to=\"/\">Hotel Posada del Ángel</Link>\n                    </div>\n                    \n                    <label for=\"menu-toggle\" class=\"cursor-pointer lg:hidden block\">\n                        <img src={menuIcon} class=\"fill-current text-white w-10 h-10\" alt=\"Menu\"></img>\n                    </label>                \n                    <input type=\"checkbox\" class=\"hidden\" id=\"menu-toggle\" />\n                    <Link to=\"/habitaciones\" className=\"block px-4 py-2 text-sm text-white border-b-2 border-transparent hover:border-yellow-200\">Habitaciones</Link>\n                    <Link to=\"/servicios\" className=\"block px-4 py-2 text-sm text-white border-b-2 border-transparent hover:border-yellow-200\">Servicios</Link>\n                    <Link to=\"/restaurante\" className=\"block px-4 py-2 text-sm text-white border-b-2 border-transparent hover:border-yellow-200\">Restaurante</Link>\n                    <Link to=\"/login\" className={(auth.currentUser ? \"hidden\" : \"block px-4 py-2 text-sm text-white border-b-2 border-transparent hover:border-yellow-200\")}>Iniciar Sesión</Link>\n                    <div class=\"hidden lg:flex lg:items-center lg:w-auto w-full\" id=\"menu\">\n                        <nav>                            \n                            <ul class=\"lg:flex items-center justify-between text-base text-white pt-4 lg:pt-0\">\n                                <li>\n                                    <Dropdown />\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </header>\n            </>\n        )\n    }\n}\nexport default Navbar\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ListaServicios.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ListaHabitaciones.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ListaClientes.js",["179"],"import React, { useState, useEffect } from 'react'\nimport { db } from '../../firebase'\n\nexport default function ListaClientes() {\n\n    const [listaClientes, setLista] = useState([])\n    const [cargando, setCargando] = useState(true)\n    const [ultimo, setUltimo] = useState({})\n    const [nombre, setNombre] = useState(\"Nombre\")\n    const [apellido, setApellido] = useState(\"Apellido\")\n    const [email, setEmail] = useState(\"john.va@va.org\")\n    const [identidad, setIdentidad] = useState(\"0801-2000-08813\")\n    const [telefono, setTelefono] = useState(\"9999-9999\")\n    const [clienteSeleccionado, setCliente] = useState({})\n\n    const handleScroll = event => {\n        if (ultimo !== undefined) {\n            const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n            let bottom = scrollHeight - scrollTop;\n            if (Math.floor(bottom) === clientHeight || Math.ceil(bottom) === clientHeight) {\n                setCargando(true)\n                nextPage(ultimo)\n            }\n        }\n    }\n\n    function nextPage(ultimo) {\n        if (ultimo !== undefined) {\n            let query = db.collection(\"Usuarios\").orderBy(\"Nombre\").startAfter(ultimo).limit(10)\n            mostrarQuery(query)\n        }\n    }\n\n    const mostrarQuery = async (query) => {\n        query.onSnapshot((querySnapshot) => {\n            const clientes = []\n            querySnapshot.forEach((doc) => {\n                clientes.push({ ...doc.data(), id: doc.id })\n            });\n            setLista(listaClientes.concat(clientes))\n            const last = querySnapshot.docs[querySnapshot.docs.length - 1]\n            if (last !== undefined) {\n                setUltimo(last)\n            }\n        })\n        setCargando(false);\n    }\n\n    const getClientes = async () => {\n        let query = db.collection(\"Usuarios\").orderBy(\"Nombre\").limit(20)\n        mostrarQuery(query)\n    }\n\n    useEffect(() => {\n        getClientes()\n    }, [])\n\n    const handleCliente = cliente => {\n        setNombre(cliente.Nombre)\n        setApellido(cliente.Apellido)\n        setEmail(cliente.Email)\n        if (cliente.Identidad === undefined){\n            setIdentidad(\"*Pendiente*\")\n        } else{\n            setIdentidad(cliente.Identidad)\n        }\n        if (cliente.Telefono === undefined){\n            setTelefono(\"*Pendiente*\")\n        } else {\n            setTelefono(cliente.Telefono)\n        }\n        setCliente(cliente)        \n    }\n\n    return (\n        <div className=\"max-h-screen transform scale-0 sm:scale-100\">\n            <div className=\"grid grid-cols-3 bg-gray-100 max-h-screen min-h-screen\">\n                <div className=\"col-span-1 flex flex-col max-h-screen min-h-screen rounded-l-sm overflow-y-auto divide-y divide-gray-500 divide-opacity-50\" onScroll={handleScroll}>\n                    <div className=\"bg-gray-300 sticky z-10 opacity-95 top-0 rounded-t-md mx-1 mt-1 p-3 text-center font-bold text-lg\">\n                        Clientes\n                    </div>\n\n                    {listaClientes.map(cliente => {\n                        return ( clienteSeleccionado.Identidad === cliente.Identidad ?\n                            (<div className=\"mx-1 p-4 text-xs text-white font-semibold bg-gray-700 relative cursor-pointer\" onClick={() => handleCliente(cliente)}>\n                                {cliente.Nombre} {cliente.Apellido}                               \n                            </div>)\n                            :\n                            (<div className=\"mx-1 p-4 text-xs font-semibold hover:bg-gray-200 relative cursor-pointer\" onClick={() => handleCliente(cliente)}>\n                                {cliente.Nombre} {cliente.Apellido}                                \n                            </div>)\n                        )\n                    })}\n                    {cargando &&\n                        <cargando className=\"text-center mx-1 p-4 text-xs font-semibold\">\n                            Cargando...\n                        </cargando>\n                    }\n                </div>\n\n                <div className=\"flex col-span-2 max-h-screen min-h-screen rounded-r-sm justify-center\">\n                    <div className=\"h-full w-10/12 px-20 py-16\">\n                        <h1 className=\"font-bold text-center text-2xl mb-10 text-black m-3\"> {nombre} {apellido} </h1>\n                        <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\n                            <h2 className=\"text-blue-500 font-semibold cursor-default\">Número de Identidad</h2>\n                            <h2 className=\"text-black\">{identidad}</h2>\n                        </div>\n                        <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\n                            <h2 className=\"text-blue-500 font-semibold cursor-default\">Email</h2>\n                            <h2 className=\"text-black\">{email}</h2>\n                        </div>                        \n                        <div className=\"bg-gray-300 h-20 my-4 py-4 px-6 rounded-md\">\n                            <h2 className=\"text-blue-500 font-semibold cursor-default\">Teléfono</h2>\n                            <h2 className=\"text-black\">{telefono}</h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ListaMenu.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Habitacion.js",["180"],"import React, { useState, useEffect } from 'react'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Link } from 'react-router-dom';\nimport { storage } from '../firebase';\nimport InfoHabitacion from './InformacionHabitacion';\n\nexport default function Habitacion(props) {\n    const [fotos, setFotos] = useState([])\n    useEffect(() => {\n        async function descargarFotos() {\n            let arreglofotos = []\n            for (let i = 0; i < props.url.length; i++) {\n                let storageRef = storage.refFromURL(props.url[i])\n                await storageRef.getDownloadURL().then(direc => {\n                    arreglofotos.push(direc)\n                }).catch((error) => {\n                    console.log(\"ERROR: \" + error)\n                })\n            }\n            setFotos(arreglofotos)\n        }\n        descargarFotos()\n    }, [props.url])\n    return (\n        <div>\n            <div className=\"grid grid-cols-1 m-3 md:m-6 sm:grid-cols-2 sm:px-8 sm:gap-x-8 pb-4 md:py-12  bg-local bg-white rounded-lg\">\n                <div className=\"relative z-10 col-start-1 row-start-1 px-4 pt-40 md:pt-20 pb-3 bg-gradient-to-t sm:bg-none\">\n                    <p className=\"text-sm font-medium text-black sm:mb-1 sm:text-black\">Habitacion</p>\n                    <h2 className=\"text-xl font-semibold text-black sm:text-2xl sm:leading-7 sm:text-black md:text-3xl\">{props.nombre}</h2>\n                </div>\n\n                <div className=\"col-start-1 row-start-2 px-4 md:pb-10 bg-none\">\n\n                    <div className=\"flex items-center text-sm font-medium mt-5 mb-3 sm:mt-2 sm:mb-2 text-black\">\n                        <div>{\"Lps.\" + props.precio+\".00\"}</div>\n                    </div>\n                    <div className=\"text-sm font-medium text-black mt-2 mb-4 md:mt-6 md:mb-0\">\n                        <h2>Incluye:</h2>\n                        <ul className=\"grid grid-cols-1 mt-2 lg:grid-cols-2 list-disc list-inside bg-rose-200 pl-4\">\n                            {props.complementos.map((complemento, index) => {\n                                return (\n                                    <li key={index}>{complemento.text}</li>\n                                )\n                            })}\n\n                        </ul>\n                    </div>\n                </div>\n\n                <div className=\"col-start-1 row-start-3 space-y-3 px-4 mt-2 md:mt-1 bg-none\">\n                    <Link to={{\n                        pathname: `/habitaciones/${props.nombre}`,\n                        state: {\n                            props: props,\n                            fotos: fotos,\n                        }\n                    }\n                    }>\n                        <button type=\"button\" className=\"bg-blue-900 hover:bg-blue-700 text-white text-sm md:text-base font-semibold px-6 py-2 rounded-lg focus:outline-none focus:shadow-outline\">\n                            Mas Informacion\n                            </button>\n                    </Link>\n                </div>\n\n                <div className=\"col-start-1 row-start-1 flex md:col-start-2 md:row-span-3 bg-none\">\n                    <div className=\"w-full grid grid-cols-3 grid-rows-2 gap-2\">\n                        {\n                            fotos.map((f, index) => {\n                                return (<div className=\"relative md:block\" key={index}>\n                                    <img src={f} alt=\"foto\" className=\"absolute inset-0 w-full h-full object-cover rounded-lg bg-gray-100\" />\n                                </div>)\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/AgregarServicios.js",["181","182","183","184","185","186","187","188"],"import React, { useState, useMemo, useEffect } from 'react'\nimport { db } from '../../firebase'\nimport swal from 'sweetalert'\nimport { storage } from '../../firebase';\nimport { useDropzone } from 'react-dropzone';\nimport Items from '../AgregarItems/Items'\nimport Form from '../AgregarItems/Form'\nimport { TiMediaPlayOutline } from 'react-icons/ti';\nimport Loading from './Loading'\n\nfunction AgregarServicios(props) {\n\n    const [Nombre, setNombre] = useState(\"\");\n    const [Precio, setPrecio] = useState(\"\");\n    const [files, setFiles] = useState([]);\n    const [Url, setUrl] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [todos, setTodos] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    })\n\n    const baseStyle = {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n        borderWidth: 2,\n        borderRadius: 2,\n        borderColor: '#eeeeee',\n        borderStyle: 'dashed',\n        backgroundColor: '#fafafa',\n        color: '#bdbdbd',\n        outline: 'none',\n        transition: 'border .24s ease-in-out'\n    };\n\n    const activeStyle = {\n        borderColor: '#2196f3'\n    };\n\n    const acceptStyle = {\n        borderColor: '#00e676'\n    };\n\n    const rejectStyle = {\n        borderColor: '#ff1744'\n    };\n\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n    };\n\n    const thumb = {\n        display: 'inline-flex',\n        borderRadius: 2,\n        border: '1px solid #eaeaea',\n        marginBottom: 8,\n        marginRight: 8,\n        width: 100,\n        height: 100,\n        padding: 4,\n        boxSizing: 'border-box'\n    };\n\n    const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n    };\n\n    const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n    };\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const alertaSuccess = () => {\n        swal({\n            text: \"El Servicio \" + Nombre + \" fue agregado exitosamente\",\n            icon: \"success\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const alertaFail = () => {\n        swal({\n            text: \"El Servicio \" + Nombre + \" no se pudo agregar\",\n            icon: \"error\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const alertaFotos = () => {\n        swal({\n            text: \"El Servicio\" + Nombre + \" no tiene imagenes\",\n            icon: \"error\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const handleUpload = async (event) => {\n        event.preventDefault()\n        let dirFotos = [];\n        let uploadTask = null;\n        if (files.length !== 0) {\n            setShowModal(prev => !prev);\n            for (var i = 0; i < files.length; i++) {\n                const nombreFoto = files[i].name;\n                uploadTask = await storage.ref(`servicios/${nombreFoto}`).put(files[i]);\n\n                let Links = await storage\n                    .ref(\"servicios\")\n                    .child(nombreFoto)\n                    .getDownloadURL()\n                    .then(url => {\n                        dirFotos.push(url)\n                    });\n            }\n\n            db.collection(\"Servicios\").doc(Nombre).set({\n                Nombre: Nombre,\n                Precio: Precio,\n                Detalles: todos,\n                Url: dirFotos\n            }).then(() => {\n                setShowModal(prev => !prev);\n                alertaSuccess()\n                props.mostrarInicial()\n            }).catch(() => {\n                setShowModal(prev => !prev);\n                alertaFail()\n            })\n        } else {\n            alertaFotos()\n        }\n    };\n    //<progress value={progress} max=\"100\" />\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    alt=\"\"\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    useEffect(() => () => {\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n\n    const removeTodo = id => {\n        const removedArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    return (\n\n        <>\n            {\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\n                    : <div className=\"grid min-h-screen place-items-center\">\n                        <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\n                            <h1 className=\"text-xl font-semibold text-center\">Ingrese información sobre el servicio</h1>\n                            <form onSubmit={handleUpload} className=\"mt-6\">\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre del Servicio</label>\n                                <input onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\n                                <input onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\n\n                                <Form onSubmit={addTodo} />\n                                <Items\n                                    todos={todos}\n                                    completeTodo={completeTodo}\n                                    removeTodo={removeTodo}\n                                    updateTodo={updateTodo}\n                                />\n\n                                <div class=\"py-6\">\n                                    <section className=\"container\">\n                                        <div {...getRootProps({ className: 'dropzone', style })}>\n                                            <input {...getInputProps()} />\n                                            <p>Drag 'n' drop some files here, or click to select files</p>\n                                        </div>\n                                        <aside style={thumbsContainer}>\n                                            {thumbs}\n                                        </aside>\n                                    </section>\n                                </div>\n                                <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Agregar Servicio</button>\n                            </form>\n                        </div>\n\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default AgregarServicios","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Dropdown.js",[],"/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/AgregarHabitaciones.js",["189","190","191","192","193","194","195","196"],"import React, { useState, useMemo, useEffect } from 'react'\nimport { db } from '../../firebase'\nimport swal from 'sweetalert'\nimport { storage } from '../../firebase';\nimport { useDropzone } from 'react-dropzone';\nimport Items from '../AgregarItems/Items'\nimport Form from '../AgregarItems/Form'\nimport { TiMediaPlayOutline } from 'react-icons/ti';\nimport Loading from './Loading'\n\nfunction AgregarHabitaciones(props) {\n\n    const [Nombre, setNombre] = useState(\"\");\n    const [Precio, setPrecio] = useState(\"\");\n    const [files, setFiles] = useState([]);\n    const [Url, setUrl] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [todos, setTodos] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    })\n\n    const baseStyle = {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n        borderWidth: 2,\n        borderRadius: 2,\n        borderColor: '#eeeeee',\n        borderStyle: 'dashed',\n        backgroundColor: '#fafafa',\n        color: '#bdbdbd',\n        outline: 'none',\n        transition: 'border .24s ease-in-out'\n    };\n\n    const activeStyle = {\n        borderColor: '#2196f3'\n    };\n\n    const acceptStyle = {\n        borderColor: '#00e676'\n    };\n\n    const rejectStyle = {\n        borderColor: '#ff1744'\n    };\n\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n    };\n\n    const thumb = {\n        display: 'inline-flex',\n        borderRadius: 2,\n        border: '1px solid #eaeaea',\n        marginBottom: 8,\n        marginRight: 8,\n        width: 100,\n        height: 100,\n        padding: 4,\n        boxSizing: 'border-box'\n    };\n\n    const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n    };\n\n    const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n    };\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const alertaSuccess = () => {\n        swal({\n            text: \"La Habitacion \" + Nombre + \" fue agregado exitosamente\",\n            icon: \"success\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const alertaFail = () => {\n        swal({\n            text: \"La Habitacion \" + Nombre + \" no se pudo agregar\",\n            icon: \"error\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const alertaFotos = () => {\n        swal({\n            text: \"La Habitacion\" + Nombre + \" no tiene imagenes\",\n            icon: \"error\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const handleUpload = async (event) => {\n        event.preventDefault()\n        let dirFotos = [];\n        let uploadTask = null;\n        if (files.length !== 0) {\n            setShowModal(prev => !prev);\n            for (var i = 0; i < files.length; i++) {\n                const nombreFoto = files[i].name;\n                uploadTask = await storage.ref(`habitaciones/${nombreFoto}`).put(files[i]);\n\n                let Links = await storage\n                    .ref(\"habitaciones\")\n                    .child(nombreFoto)\n                    .getDownloadURL()\n                    .then(url => {\n                        dirFotos.push(url)\n                    });\n            }\n\n            db.collection(\"Habitaciones\").doc(Nombre).set({\n                Nombre: Nombre,\n                Precio: Precio,\n                Complementos: todos,\n                Url: dirFotos,\n                Resena: [],\n            }).then(() => {\n                setShowModal(prev => !prev);\n                alertaSuccess()\n                props.mostrarInicial()\n            }).catch(() => {\n                setShowModal(prev => !prev);\n                alertaFail()\n            })\n        } else {\n            alertaFotos()\n        }\n    };\n    //<progress value={progress} max=\"100\" />\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    alt=\"\"\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    useEffect(() => () => {\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n\n    const removeTodo = id => {\n        const removedArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    return (\n        <>\n            {\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\n                    : <div>\n                        <div className=\"grid min-h-screen place-items-center\">\n                            <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\n                                <h1 className=\"text-xl font-semibold text-center\">Ingrese información sobre la habitacion</h1>\n                                <form onSubmit={handleUpload} className=\"mt-6\">\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre de la habitacion</label>\n                                    <input onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\n                                    <input onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\n\n                                    <Form onSubmit={addTodo} />\n                                    <Items\n                                        todos={todos}\n                                        completeTodo={completeTodo}\n                                        removeTodo={removeTodo}\n                                        updateTodo={updateTodo}\n                                    />\n\n                                    <div class=\"py-6\">\n                                        <section className=\"container\">\n                                            <div {...getRootProps({ className: 'dropzone', style })}>\n                                                <input {...getInputProps()} />\n                                                <p>Drag 'n' drop some files here, or click to select files</p>\n                                            </div>\n                                            <aside style={thumbsContainer}>\n                                                {thumbs}\n                                            </aside>\n                                        </section>\n                                    </div>\n                                    <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Agregar Habitacion</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default AgregarHabitaciones","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ModificarHabitacion.js",["197","198","199","200","201"],"import React, { useState, useMemo, useEffect } from 'react'\nimport { useDropzone } from 'react-dropzone';\nimport { db, storage } from '../../firebase';\nimport Items from '../AgregarItems/Items'\nimport Form from '../AgregarItems/Form'\nimport swal from 'sweetalert'\nimport Loading from './Loading'\n\nfunction ModificarHabitacion(props) {\n\n    const [todos, setTodos] = useState([]);\n    const [nombre, setNombre] = useState(\"\");\n    const [precio, setPrecio] = useState(\"\");\n    const [url, setUrl] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    })\n\n    const baseStyle = {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n        borderWidth: 2,\n        borderRadius: 2,\n        borderColor: '#eeeeee',\n        borderStyle: 'dashed',\n        backgroundColor: '#fafafa',\n        color: '#bdbdbd',\n        outline: 'none',\n        transition: 'border .24s ease-in-out'\n    };\n\n    const activeStyle = {\n        borderColor: '#2196f3'\n    };\n\n    const acceptStyle = {\n        borderColor: '#00e676'\n    };\n\n    const rejectStyle = {\n        borderColor: '#ff1744'\n    };\n\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n    };\n\n    const thumb = {\n        display: 'inline-flex',\n        borderRadius: 2,\n        border: '1px solid #eaeaea',\n        marginBottom: 8,\n        marginRight: 8,\n        width: 100,\n        height: 100,\n        padding: 4,\n        boxSizing: 'border-box'\n    };\n\n    const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n    };\n\n    const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n    };\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    alt=\"\"\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    useEffect(() => {\n        setNombre(props.nombre)\n        db.collection(\"Habitaciones\").where(\"Nombre\", \"==\", props.nombre)\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    setNombre(doc.data().Nombre)\n                    setTodos(doc.data().Complementos)\n                    setPrecio(doc.data().Precio)\n                    setUrl(doc.data().Url)\n                });\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n    }, [])\n\n\n    const alertaSuccess = () => {\n        swal({\n            text: \"La Habitacion se modifico exitosamente\",\n            icon: \"success\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n\n    const removeTodo = id => {\n        const removedArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    const handleModificarFotos = (event) => {\n        event.preventDefault()\n        var element\n        var index\n        for (index = 0; index < url.length; index++) {\n            element = url[index];\n            if (element === event.target.id) {\n                break\n            }\n        }\n\n        let deleteRef\n        deleteRef = storage.refFromURL(element)\n        deleteRef.delete()\n\n        const temp = [...url];\n        temp.splice(index, 1);\n        setUrl(temp);\n    }\n\n    const handleUpload = async (event) => {\n        event.preventDefault()\n\n        let dirFotos = [];\n        let uploadTask = null;\n\n        url.map(ur => {\n            dirFotos.push(ur)\n        })\n        setShowModal(prev => !prev);\n        if (files.length >= 0) {\n            for (var i = 0; i < files.length; i++) {\n                const nombreFoto = files[i].name;\n                uploadTask = await storage.ref(`habitaciones/${nombreFoto}`).put(files[i]);\n\n                let Links = await storage\n                    .ref(\"habitaciones\")\n                    .child(nombreFoto)\n                    .getDownloadURL()\n                    .then(url => {\n                        dirFotos.push(url)\n                    });\n            }\n        }\n\n        db.collection(\"Habitaciones\").doc(nombre).set({\n            Nombre: nombre,\n            Precio: precio,\n            Complementos: todos,\n            Url: dirFotos,\n            Resena: [],\n        }).then(() => {\n            setShowModal(prev => !prev);\n            alertaSuccess()\n            props.mostrarInicial()\n        }).catch(() => {\n            setShowModal(prev => !prev);\n        })\n    }\n\n    return (\n        <>\n            {\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\n                    : <div>\n                        <div className=\"grid min-h-screen place-items-center\">\n                            <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-11/12\">\n                                <h1 className=\"text-xl font-semibold text-center\">Modifique la información sobre la habitación</h1>\n                                <form onSubmit={handleUpload} className=\"mt-6\">\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre de la habitación</label>\n                                    <input value={nombre} onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" disabled required />\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\n                                    <input value={precio} onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\n\n                                    <Form onSubmit={addTodo} />\n                                    <Items\n                                        todos={todos}\n                                        completeTodo={completeTodo}\n                                        removeTodo={removeTodo}\n                                        updateTodo={updateTodo}\n                                    />\n\n                                    <div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\n                                        <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Fotos</h2>\n                                        <div className=\"grid grid-cols-2 place-items-center\">\n                                            {\n                                                url.map(foto => {\n                                                    return (\n                                                        <div>\n                                                            <div class=\"relative bg-gray-300 rounded-2xl m-auto py-2 px-2\">\n                                                                <button className=\"absolute top-0 right-0\" onClick={handleModificarFotos}>\n                                                                    <svg class=\"fill-current text-red-500 h-8 w-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                                        <path id={foto} fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n                                                                    </svg>\n                                                                </button>\n                                                                <img\n                                                                    className=\"h-40 w-40 object-cover rounded-xl\"\n                                                                    alt=\"Habitacion\"\n                                                                    src={foto}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                        </div>\n                                    </div>\n\n                                    <div class=\"py-6\">\n                                        <section className=\"container\">\n                                            <div {...getRootProps({ className: 'dropzone', style })}>\n                                                <input {...getInputProps()} />\n                                                <p>Drag 'n' drop some files here, or click to select files</p>\n                                            </div>\n                                            <aside style={thumbsContainer}>\n                                                {thumbs}\n                                            </aside>\n                                        </section>\n                                    </div>\n\n                                    <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Modificar Habitacion</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default ModificarHabitacion\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/AgregarMenu.js",["202","203","204","205","206","207","208","209"],"import React, { useState, useMemo, useEffect } from 'react'\nimport { db } from '../../firebase'\nimport swal from 'sweetalert'\nimport { storage } from '../../firebase';\nimport { useDropzone } from 'react-dropzone';\nimport Items from '../AgregarItems/Items'\nimport Form from '../AgregarItems/Form'\nimport { TiMediaPlayOutline } from 'react-icons/ti';\nimport Loading from './Loading'\n\nfunction AgregarMenu(props) {\n\n    const [Nombre, setNombre] = useState(\"\");\n    const [Precio, setPrecio] = useState(\"\");\n    const [files, setFiles] = useState([]);\n    const [Url, setUrl] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [todos, setTodos] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n\n\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    })\n\n    const baseStyle = {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n        borderWidth: 2,\n        borderRadius: 2,\n        borderColor: '#eeeeee',\n        borderStyle: 'dashed',\n        backgroundColor: '#fafafa',\n        color: '#bdbdbd',\n        outline: 'none',\n        transition: 'border .24s ease-in-out'\n    };\n\n    const activeStyle = {\n        borderColor: '#2196f3'\n    };\n\n    const acceptStyle = {\n        borderColor: '#00e676'\n    };\n\n    const rejectStyle = {\n        borderColor: '#ff1744'\n    };\n\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n    };\n\n    const thumb = {\n        display: 'inline-flex',\n        borderRadius: 2,\n        border: '1px solid #eaeaea',\n        marginBottom: 8,\n        marginRight: 8,\n        width: 100,\n        height: 100,\n        padding: 4,\n        boxSizing: 'border-box'\n    };\n\n    const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n    };\n\n    const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n    };\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const alertaSuccess = () => {\n        swal({\n            text: \"El Menu \" + Nombre + \" fue agregado exitosamente\",\n            icon: \"success\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const alertaFail = () => {\n        swal({\n            text: \"El Menu \" + Nombre + \" no se pudo agregar\",\n            icon: \"error\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const alertaFotos = () => {\n        swal({\n            text: \"El Menu\" + Nombre + \" no tiene imagenes\",\n            icon: \"error\",\n            button: \"Aceptar\"\n        });\n    }\n\n    const handleUpload = async (event) => {\n        event.preventDefault()\n        let dirFotos = [];\n        let uploadTask = null;\n        if (files.length !== 0) {\n            setShowModal(prev => !prev);\n            for (var i = 0; i < files.length; i++) {\n                const nombreFoto = files[i].name;\n                uploadTask = await storage.ref(`menu/${nombreFoto}`).put(files[i]);\n\n                let Links = await storage\n                    .ref(\"menu\")\n                    .child(nombreFoto)\n                    .getDownloadURL()\n                    .then(url => {\n                        dirFotos.push(url)\n                    });\n            }\n\n            db.collection(\"Menu\").doc(Nombre).set({\n                Nombre: Nombre,\n                Precio: Precio,\n                Detalles: todos,\n                Url: dirFotos\n            }).then(() => {\n                setShowModal(prev => !prev);\n                alertaSuccess()\n                props.mostrarInicial()\n            }).catch(() => {\n                setShowModal(prev => !prev);\n                alertaFail()\n            })\n        } else {\n            alertaFotos()\n        }\n    };\n    //<progress value={progress} max=\"100\" />\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    alt=\"\"\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    useEffect(() => () => {\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n\n    const removeTodo = id => {\n        const removedArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    return (\n        <>\n            {\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\n                    : <div className=\"grid min-h-screen place-items-center\">\n                        <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-full\">\n                            <h1 className=\"text-xl font-semibold text-center\">Ingrese información sobre el Menu</h1>\n                            <form onSubmit={handleUpload} className=\"mt-6\">\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre del Menu</label>\n                                <input onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\n                                <input onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\n\n                                <Form onSubmit={addTodo} />\n                                <Items\n                                    todos={todos}\n                                    completeTodo={completeTodo}\n                                    removeTodo={removeTodo}\n                                    updateTodo={updateTodo}\n                                />\n\n                                <div class=\"py-6\">\n                                    <section className=\"container\">\n                                        <div {...getRootProps({ className: 'dropzone', style })}>\n                                            <input {...getInputProps()} />\n                                            <p>Drag 'n' drop some files here, or click to select files</p>\n                                        </div>\n                                        <aside style={thumbsContainer}>\n                                            {thumbs}\n                                        </aside>\n                                    </section>\n                                </div>\n                                <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Agregar Menu</button>\n                            </form>\n                        </div>\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default AgregarMenu","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ModificarMenu.js",["210","211","212","213","214"],"import React, { useState, useMemo, useEffect } from 'react'\nimport { useDropzone } from 'react-dropzone';\nimport { db, storage } from '../../firebase';\nimport Items from '../AgregarItems/Items'\nimport Form from '../AgregarItems/Form'\nimport swal from 'sweetalert'\nimport Loading from './Loading'\n\nfunction ModificarMenu(props) {\n\n    const [todos, setTodos] = useState([]);\n    const [nombre, setNombre] = useState(\"\");\n    const [precio, setPrecio] = useState(\"\");\n    const [url, setUrl] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    })\n\n    const baseStyle = {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n        borderWidth: 2,\n        borderRadius: 2,\n        borderColor: '#eeeeee',\n        borderStyle: 'dashed',\n        backgroundColor: '#fafafa',\n        color: '#bdbdbd',\n        outline: 'none',\n        transition: 'border .24s ease-in-out'\n    };\n\n    const activeStyle = {\n        borderColor: '#2196f3'\n    };\n\n    const acceptStyle = {\n        borderColor: '#00e676'\n    };\n\n    const rejectStyle = {\n        borderColor: '#ff1744'\n    };\n\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n    };\n\n    const thumb = {\n        display: 'inline-flex',\n        borderRadius: 2,\n        border: '1px solid #eaeaea',\n        marginBottom: 8,\n        marginRight: 8,\n        width: 100,\n        height: 100,\n        padding: 4,\n        boxSizing: 'border-box'\n    };\n\n    const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n    };\n\n    const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n    };\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    alt=\"\"\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    const handleUpload = async (event) => {\n        event.preventDefault()\n\n        let dirFotos = [];\n        let uploadTask = null;\n\n        url.map(ur => {\n            dirFotos.push(ur)\n        })\n        setShowModal(prev => !prev);\n        if (files.length >= 0) {\n            for (var i = 0; i < files.length; i++) {\n                const nombreFoto = files[i].name;\n                uploadTask = await storage.ref(`menu/${nombreFoto}`).put(files[i]);\n\n                let Links = await storage\n                    .ref(\"menu\")\n                    .child(nombreFoto)\n                    .getDownloadURL()\n                    .then(url => {\n                        dirFotos.push(url)\n                    });\n            }\n        }\n\n        db.collection(\"Menu\").doc(nombre).set({\n            Nombre: nombre,\n            Precio: precio,\n            Detalles: todos,\n            Url: dirFotos,\n            Resena: [],\n        }).then(() => {\n            setShowModal(prev => !prev);\n            alertaSuccess()\n            props.mostrarInicial()\n        }).catch(() => {\n            setShowModal(prev => !prev);\n        })\n\n    }\n\n    useEffect(() => {\n        setNombre(props.nombre)\n        db.collection(\"Menu\").where(\"Nombre\", \"==\", props.nombre)\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    setNombre(doc.data().Nombre)\n                    setTodos(doc.data().Detalles)\n                    setPrecio(doc.data().Precio)\n                    setUrl(doc.data().Url)\n                });\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n    }, [])\n\n\n    const alertaSuccess = () => {\n        swal({\n            text: \"El Menu se modifico exitosamente\",\n            icon: \"success\",\n            button: \"Aceptar\"\n        });\n    }\n\n    //<progress value={progress} max=\"100\" />\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n\n    const removeTodo = id => {\n        const removedArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    const handleModificarFotos = (event) => {\n        event.preventDefault()\n        var element\n        var index\n        for (index = 0; index < url.length; index++) {\n            element = url[index];\n            if (element === event.target.id) {\n                break\n            }\n        }\n\n        let deleteRef\n        deleteRef = storage.refFromURL(element)\n        deleteRef.delete()\n\n        const temp = [...url];\n        temp.splice(index, 1);\n        setUrl(temp);\n    }\n\n    return (\n        <>\n            {\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\n                    : <div>\n                        <div className=\"grid min-h-screen place-items-center\">\n                            <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-11/12\">\n                                <h1 className=\"text-xl font-semibold text-center\">Modifique la información sobre el Menu</h1>\n                                <form onSubmit={handleUpload} className=\"mt-6\">\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre del Menu</label>\n                                    <input value={nombre} onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" disabled required />\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\n                                    <input value={precio} onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\n\n                                    <Form onSubmit={addTodo} />\n                                    <Items\n                                        todos={todos}\n                                        completeTodo={completeTodo}\n                                        removeTodo={removeTodo}\n                                        updateTodo={updateTodo}\n                                    />\n\n                                    <div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\n                                        <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Fotos</h2>\n                                        <div className=\"grid grid-cols-2 place-items-center\">\n                                            {\n                                                url.map(foto => {\n                                                    return (\n                                                        <div>\n                                                            <div class=\"relative bg-gray-300 rounded-2xl m-auto py-2 px-2\">\n                                                                <button className=\"absolute top-0 right-0\" onClick={handleModificarFotos}>\n                                                                    <svg class=\"fill-current text-red-500 h-8 w-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                                        <path id={foto} fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n                                                                    </svg>\n                                                                </button>\n                                                                <img\n                                                                    className=\"h-40 w-40 object-cover rounded-xl\"\n                                                                    alt=\"Habitacion\"\n                                                                    src={foto}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                        </div>\n                                    </div>\n\n                                    <div class=\"py-6\">\n                                        <section className=\"container\">\n                                            <div {...getRootProps({ className: 'dropzone', style })}>\n                                                <input {...getInputProps()} />\n                                                <p>Drag 'n' drop some files here, or click to select files</p>\n                                            </div>\n                                            <aside style={thumbsContainer}>\n                                                {thumbs}\n                                            </aside>\n                                        </section>\n                                    </div>\n\n                                    <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Modificar Menu</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default ModificarMenu\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/ModificarServicios.js",["215","216","217","218","219"],"import React, { useState, useMemo, useEffect } from 'react'\nimport { useDropzone } from 'react-dropzone';\nimport { db, storage } from '../../firebase';\nimport Items from '../AgregarItems/Items'\nimport Form from '../AgregarItems/Form'\nimport swal from 'sweetalert'\nimport Loading from './Loading'\n\nfunction ModificarServicios(props) {\n\n    const [todos, setTodos] = useState([]);\n    const [nombre, setNombre] = useState(\"\");\n    const [precio, setPrecio] = useState(\"\");\n    const [url, setUrl] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept: 'image/jpeg, image/png, image/jpg', maxFiles: 5, onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    })\n\n    const baseStyle = {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n        borderWidth: 2,\n        borderRadius: 2,\n        borderColor: '#eeeeee',\n        borderStyle: 'dashed',\n        backgroundColor: '#fafafa',\n        color: '#bdbdbd',\n        outline: 'none',\n        transition: 'border .24s ease-in-out'\n    };\n\n    const activeStyle = {\n        borderColor: '#2196f3'\n    };\n\n    const acceptStyle = {\n        borderColor: '#00e676'\n    };\n\n    const rejectStyle = {\n        borderColor: '#ff1744'\n    };\n\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n    };\n\n    const thumb = {\n        display: 'inline-flex',\n        borderRadius: 2,\n        border: '1px solid #eaeaea',\n        marginBottom: 8,\n        marginRight: 8,\n        width: 100,\n        height: 100,\n        padding: 4,\n        boxSizing: 'border-box'\n    };\n\n    const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n    };\n\n    const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n    };\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    alt=\"\"\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    const handleUpload = async (event) => {\n        event.preventDefault()\n\n        let dirFotos = [];\n        let uploadTask = null;\n\n        url.map(ur => {\n            dirFotos.push(ur)\n        })\n        setShowModal(prev => !prev);\n        if (files.length >= 0) {\n            for (var i = 0; i < files.length; i++) {\n                const nombreFoto = files[i].name;\n                uploadTask = await storage.ref(`servicios/${nombreFoto}`).put(files[i]);\n\n                let Links = await storage\n                    .ref(\"servicios\")\n                    .child(nombreFoto)\n                    .getDownloadURL()\n                    .then(url => {\n                        dirFotos.push(url)\n                    });\n            }\n        }\n\n        db.collection(\"Servicios\").doc(nombre).set({\n            Nombre: nombre,\n            Precio: precio,\n            Detalles: todos,\n            Url: dirFotos,\n            Resena: [],\n        }).then(() => {\n            setShowModal(prev => !prev);\n            alertaSuccess()\n            props.mostrarInicial()\n        }).catch(() => {\n            setShowModal(prev => !prev);\n        })\n\n    }\n\n    useEffect(() => {\n        setNombre(props.nombre)\n        db.collection(\"Servicios\").where(\"Nombre\", \"==\", props.nombre)\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    setNombre(doc.data().Nombre)\n                    setTodos(doc.data().Detalles)\n                    setPrecio(doc.data().Precio)\n                    setUrl(doc.data().Url)\n                });\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n    }, [])\n\n\n    const alertaSuccess = () => {\n        swal({\n            text: \"El Servicio se modifico exitosamente\",\n            icon: \"success\",\n            button: \"Aceptar\"\n        });\n    }\n\n    //<progress value={progress} max=\"100\" />\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n\n    const removeTodo = id => {\n        const removedArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    const handleModificarFotos = (event) => {\n        event.preventDefault()\n        var element\n        var index\n        for (index = 0; index < url.length; index++) {\n            element = url[index];\n            if (element === event.target.id) {\n                break\n            }\n        }\n\n        let deleteRef\n        deleteRef = storage.refFromURL(element)\n        deleteRef.delete()\n\n        const temp = [...url];\n        temp.splice(index, 1);\n        setUrl(temp);\n    }\n\n    return (\n        <>\n            {\n                showModal ? <Loading showModal={showModal} setShowModal={setShowModal} />\n                    : <div>\n                        <div className=\"grid min-h-screen place-items-center\">\n                            <div className=\"w-11/12 p-12 bg-white sm:w-8/12 md:w-1/2 lg:w-11/12\">\n                                <h1 className=\"text-xl font-semibold text-center\">Modifique la información sobre el servicio</h1>\n                                <form onSubmit={handleUpload} className=\"mt-6\">\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Nombre del servicio</label>\n                                    <input value={nombre} onChange={event => setNombre(event.target.value)} type=\"text\" name=\"nombre\" placeholder=\"Premium\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" disabled required />\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Precio</label>\n                                    <input value={precio} onChange={event => setPrecio(event.target.value)} type=\"number\" name=\"precio\" placeholder=\"800\" className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\n                                    <label className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Detalles</label>\n\n                                    <Form onSubmit={addTodo} />\n                                    <Items\n                                        todos={todos}\n                                        completeTodo={completeTodo}\n                                        removeTodo={removeTodo}\n                                        updateTodo={updateTodo}\n                                    />\n\n                                    <div className=\"bg-gray-300 my-4 py-4 px-6 rounded-md\">\n                                        <h2 className=\"text-blue-500 font-semibold cursor-default mb-2\">Fotos</h2>\n                                        <div className=\"grid grid-cols-2 place-items-center\">\n                                            {\n                                                url.map(foto => {\n                                                    return (\n                                                        <div>\n                                                            <div class=\"relative bg-gray-300 rounded-2xl m-auto py-2 px-2\">\n                                                                <button className=\"absolute top-0 right-0\" onClick={handleModificarFotos}>\n                                                                    <svg class=\"fill-current text-red-500 h-8 w-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                                        <path id={foto} fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n                                                                    </svg>\n                                                                </button>\n                                                                <img\n                                                                    className=\"h-40 w-40 object-cover rounded-xl\"\n                                                                    alt=\"Habitacion\"\n                                                                    src={foto}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                        </div>\n                                    </div>\n\n                                    <div class=\"py-6\">\n                                        <section className=\"container\">\n                                            <div {...getRootProps({ className: 'dropzone', style })}>\n                                                <input {...getInputProps()} />\n                                                <p>Drag 'n' drop some files here, or click to select files</p>\n                                            </div>\n                                            <aside style={thumbsContainer}>\n                                                {thumbs}\n                                            </aside>\n                                        </section>\n                                    </div>\n\n                                    <button type=\"submit\" class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">Modificar Servicio</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default ModificarServicios\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/Administración/Loading.js",["220"],"import React, { useState } from 'react'\n\n\nfunction Loading({ showModal, setShowModal }) {\n\n    return (\n        <>\n            {showModal ? (\n                <div className=\"min-w-screen min-h-screen flex items-center justify-center\">\n                    <div class=\"w-40 h-12 inline-flex items-center px-4 py-2 border border-transparent text-base leading-6 font-medium rounded-md text-black bg-gray-300 active:bg-gray-300 transition ease-in-out duration-150\">\n                        <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-black\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                        </svg>\n                    Procesando\n                </div>\n                </div>\n            ) : null}\n        </>\n\n    )\n}\n\nexport default Loading","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/AgregarItems/Form.js",["221","222"],"import React, { useState, useEffect, useRef } from 'react';\n\nfunction Form(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {props.edit ? (\n        <div>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\n          />\n          <button onClick={handleSubmit} class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-red-500 shadow-lg focus:outline-none hover:bg-red-700 hover:shadow-none\">\n            Actualizar\n          </button>\n        </div>\n      ) : (\n          <div>\n            <input\n              placeholder='detalle'\n              value={input}\n              onChange={handleChange}\n              name='text'\n              className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\n            />\n            <button onClick={handleSubmit} class=\"w-full py-3 mt-10 font-medium tracking-widest text-white uppercase bg-black shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">\n              Agregar\n          </button>\n          <div class=\"py-2\"/>\n          </div>\n        )}\n    </form>\n  );\n}\n\nexport default Form;\n","/home/cnuila/Documents/Ingeniería de Software/Aplicacion-Hotel/src/Components/AgregarItems/Items.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":12,"column":10,"nodeType":"229","messageId":"230","endLine":12,"endColumn":22},{"ruleId":"227","severity":1,"message":"231","line":13,"column":8,"nodeType":"229","messageId":"230","endLine":13,"endColumn":20},{"ruleId":"227","severity":1,"message":"232","line":16,"column":20,"nodeType":"229","messageId":"230","endLine":16,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":27,"column":6,"nodeType":"235","endLine":27,"endColumn":8,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":19,"column":1,"nodeType":"239","messageId":"240","endLine":19,"endColumn":30},{"ruleId":"227","severity":1,"message":"241","line":1,"column":10,"nodeType":"229","messageId":"230","endLine":1,"endColumn":14},{"ruleId":"227","severity":1,"message":"242","line":3,"column":17,"nodeType":"229","messageId":"230","endLine":3,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":110,"column":296,"nodeType":"245","endLine":110,"endColumn":307},{"ruleId":"227","severity":1,"message":"241","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":14},{"ruleId":"227","severity":1,"message":"246","line":2,"column":8,"nodeType":"229","messageId":"230","endLine":2,"endColumn":16},{"ruleId":"233","severity":1,"message":"247","line":56,"column":8,"nodeType":"235","endLine":56,"endColumn":10,"suggestions":"248"},{"ruleId":"227","severity":1,"message":"249","line":5,"column":8,"nodeType":"229","messageId":"230","endLine":5,"endColumn":22},{"ruleId":"227","severity":1,"message":"250","line":8,"column":10,"nodeType":"229","messageId":"230","endLine":8,"endColumn":28},{"ruleId":"227","severity":1,"message":"251","line":16,"column":12,"nodeType":"229","messageId":"230","endLine":16,"endColumn":15},{"ruleId":"227","severity":1,"message":"252","line":16,"column":17,"nodeType":"229","messageId":"230","endLine":16,"endColumn":23},{"ruleId":"227","severity":1,"message":"253","line":17,"column":12,"nodeType":"229","messageId":"230","endLine":17,"endColumn":20},{"ruleId":"227","severity":1,"message":"254","line":17,"column":22,"nodeType":"229","messageId":"230","endLine":17,"endColumn":33},{"ruleId":"233","severity":1,"message":"255","line":100,"column":9,"nodeType":"235","endLine":104,"endColumn":6,"suggestions":"256"},{"ruleId":"227","severity":1,"message":"257","line":138,"column":17,"nodeType":"229","messageId":"230","endLine":138,"endColumn":27},{"ruleId":"227","severity":1,"message":"258","line":140,"column":21,"nodeType":"229","messageId":"230","endLine":140,"endColumn":26},{"ruleId":"227","severity":1,"message":"250","line":8,"column":10,"nodeType":"229","messageId":"230","endLine":8,"endColumn":28},{"ruleId":"227","severity":1,"message":"251","line":16,"column":12,"nodeType":"229","messageId":"230","endLine":16,"endColumn":15},{"ruleId":"227","severity":1,"message":"252","line":16,"column":17,"nodeType":"229","messageId":"230","endLine":16,"endColumn":23},{"ruleId":"227","severity":1,"message":"253","line":17,"column":12,"nodeType":"229","messageId":"230","endLine":17,"endColumn":20},{"ruleId":"227","severity":1,"message":"254","line":17,"column":22,"nodeType":"229","messageId":"230","endLine":17,"endColumn":33},{"ruleId":"233","severity":1,"message":"255","line":100,"column":9,"nodeType":"235","endLine":104,"endColumn":6,"suggestions":"259"},{"ruleId":"227","severity":1,"message":"257","line":138,"column":17,"nodeType":"229","messageId":"230","endLine":138,"endColumn":27},{"ruleId":"227","severity":1,"message":"258","line":140,"column":21,"nodeType":"229","messageId":"230","endLine":140,"endColumn":26},{"ruleId":"233","severity":1,"message":"255","line":96,"column":9,"nodeType":"235","endLine":100,"endColumn":6,"suggestions":"260"},{"ruleId":"233","severity":1,"message":"261","line":129,"column":8,"nodeType":"235","endLine":129,"endColumn":10,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":200,"column":20,"nodeType":"265","messageId":"266","endLine":200,"endColumn":22},{"ruleId":"227","severity":1,"message":"257","line":207,"column":17,"nodeType":"229","messageId":"230","endLine":207,"endColumn":27},{"ruleId":"227","severity":1,"message":"258","line":209,"column":21,"nodeType":"229","messageId":"230","endLine":209,"endColumn":26},{"ruleId":"227","severity":1,"message":"250","line":8,"column":10,"nodeType":"229","messageId":"230","endLine":8,"endColumn":28},{"ruleId":"227","severity":1,"message":"251","line":16,"column":12,"nodeType":"229","messageId":"230","endLine":16,"endColumn":15},{"ruleId":"227","severity":1,"message":"252","line":16,"column":17,"nodeType":"229","messageId":"230","endLine":16,"endColumn":23},{"ruleId":"227","severity":1,"message":"253","line":17,"column":12,"nodeType":"229","messageId":"230","endLine":17,"endColumn":20},{"ruleId":"227","severity":1,"message":"254","line":17,"column":22,"nodeType":"229","messageId":"230","endLine":17,"endColumn":33},{"ruleId":"233","severity":1,"message":"255","line":101,"column":9,"nodeType":"235","endLine":105,"endColumn":6,"suggestions":"267"},{"ruleId":"227","severity":1,"message":"257","line":139,"column":17,"nodeType":"229","messageId":"230","endLine":139,"endColumn":27},{"ruleId":"227","severity":1,"message":"258","line":141,"column":21,"nodeType":"229","messageId":"230","endLine":141,"endColumn":26},{"ruleId":"233","severity":1,"message":"255","line":96,"column":9,"nodeType":"235","endLine":100,"endColumn":6,"suggestions":"268"},{"ruleId":"263","severity":1,"message":"264","line":120,"column":20,"nodeType":"265","messageId":"266","endLine":120,"endColumn":22},{"ruleId":"227","severity":1,"message":"257","line":127,"column":17,"nodeType":"229","messageId":"230","endLine":127,"endColumn":27},{"ruleId":"227","severity":1,"message":"258","line":129,"column":21,"nodeType":"229","messageId":"230","endLine":129,"endColumn":26},{"ruleId":"233","severity":1,"message":"261","line":170,"column":8,"nodeType":"235","endLine":170,"endColumn":10,"suggestions":"269"},{"ruleId":"233","severity":1,"message":"255","line":96,"column":9,"nodeType":"235","endLine":100,"endColumn":6,"suggestions":"270"},{"ruleId":"263","severity":1,"message":"264","line":120,"column":20,"nodeType":"265","messageId":"266","endLine":120,"endColumn":22},{"ruleId":"227","severity":1,"message":"257","line":127,"column":17,"nodeType":"229","messageId":"230","endLine":127,"endColumn":27},{"ruleId":"227","severity":1,"message":"258","line":129,"column":21,"nodeType":"229","messageId":"230","endLine":129,"endColumn":26},{"ruleId":"233","severity":1,"message":"261","line":170,"column":8,"nodeType":"235","endLine":170,"endColumn":10,"suggestions":"271"},{"ruleId":"227","severity":1,"message":"272","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"273","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"274","line":1,"column":38,"nodeType":"229","messageId":"230","endLine":1,"endColumn":44},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used.","'setClosed' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getReservas' and 'getReseñas'. Either include them or remove the dependency array.","ArrayExpression",["277"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Link' is defined but never used.","'Component' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'firebase' is defined but never used.","React Hook useEffect has a missing dependency: 'getClientes'. Either include it or remove the dependency array.",["278"],"'InfoHabitacion' is defined but never used.","'TiMediaPlayOutline' is defined but never used.","'Url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'acceptStyle', 'activeStyle', 'baseStyle', and 'rejectStyle'. Either include them or remove the dependency array.",["279"],"'uploadTask' is assigned a value but never used.","'Links' is assigned a value but never used.",["280"],["281"],"React Hook useEffect has a missing dependency: 'props.nombre'. Either include it or remove the dependency array. If 'setNombre' needs the current value of 'props.nombre', you can also switch to useReducer instead of useState and read 'props.nombre' in the reducer.",["282"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["283"],["284"],["285"],["286"],["287"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"292","fix":"295"},{"desc":"296","fix":"297"},{"desc":"292","fix":"298"},{"desc":"292","fix":"299"},{"desc":"296","fix":"300"},{"desc":"292","fix":"301"},{"desc":"296","fix":"302"},"Update the dependencies array to be: [getReservas, getReseñas]",{"range":"303","text":"304"},"Update the dependencies array to be: [getClientes]",{"range":"305","text":"306"},"Update the dependencies array to be: [baseStyle, isDragActive, activeStyle, isDragAccept, acceptStyle, isDragReject, rejectStyle]",{"range":"307","text":"308"},{"range":"309","text":"308"},{"range":"310","text":"308"},"Update the dependencies array to be: [props.nombre]",{"range":"311","text":"312"},{"range":"313","text":"308"},{"range":"314","text":"308"},{"range":"315","text":"312"},{"range":"316","text":"308"},{"range":"317","text":"312"},[944,946],"[getReservas, getReseñas]",[1938,1940],"[getClientes]",[2549,2621],"[baseStyle, isDragActive, activeStyle, isDragAccept, acceptStyle, isDragReject, rejectStyle]",[2552,2624],[2417,2489],[3379,3381],"[props.nombre]",[2545,2617],[2411,2483],[4495,4497],[2416,2488],[4520,4522]]